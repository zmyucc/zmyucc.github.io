<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>分支和循环练习</title>
    <url>/posts/250ec2ff.html</url>
    <content><![CDATA[<h3 id="将三个数字从小到大输出"><a href="#将三个数字从小到大输出" class="headerlink" title="将三个数字从小到大输出"></a>将三个数字从小到大输出</h3><p>算法实现：a中放最大值，b中间值，c最小值</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a,b,c,max;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入三个数字：-&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d,%d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">    <span class="keyword">if</span> (a&lt;b) &#123;</span><br><span class="line">        max = b;</span><br><span class="line">        b = a;</span><br><span class="line">        a = max;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a&lt;c) &#123;</span><br><span class="line">        max = c;</span><br><span class="line">        c = a;</span><br><span class="line">        a = max;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (b&lt;c) &#123;</span><br><span class="line">        max = c;</span><br><span class="line">        c = b;</span><br><span class="line">        b = max;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d,%d&quot;</span>,a,b,c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h3 id="输出1-100内3的倍数"><a href="#输出1-100内3的倍数" class="headerlink" title="输出1-100内3的倍数"></a>输出1-100内3的倍数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=<span class="number">100</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i%<span class="number">3</span>==<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d,&quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="求两个数的最大公约数"><a href="#求两个数的最大公约数" class="headerlink" title="求两个数的最大公约数"></a>求两个数的最大公约数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> m = <span class="number">12</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">8</span>;</span><br><span class="line">    <span class="type">int</span> r;</span><br><span class="line">    <span class="keyword">while</span> (m % n) &#123;</span><br><span class="line">        r = m % n;</span><br><span class="line">        m = n;</span><br><span class="line">        n = r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="打印1000-2000之间的闰年"><a href="#打印1000-2000之间的闰年" class="headerlink" title="打印1000-2000之间的闰年"></a>打印1000-2000之间的闰年</h3><p>闰年的计算方法‌：每四年一个闰年，但整百年份必须是400的倍数才是闰年。例如，2000年是闰年，而1900年则是平年。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a,b,c;</span><br><span class="line">    <span class="keyword">for</span> (a = <span class="number">1000</span>; a &lt;= <span class="number">2000</span>; a++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((a % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; a % <span class="number">100</span> != <span class="number">0</span> )|| a % <span class="number">400</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d,&quot;</span>,a);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="打印100-200之间的素数"><a href="#打印100-200之间的素数" class="headerlink" title="打印100-200之间的素数"></a>打印100-200之间的素数</h3><p>质数又称素数。指在一个大于1的自然数中，除了1和此整数自身外，没法被其他自然数整除的数。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a,b,c,d;    </span><br><span class="line">    <span class="keyword">for</span> (a=<span class="number">100</span>; a&lt;=<span class="number">200</span>; a++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (b=<span class="number">2</span>; b&lt;a; b++) &#123;            </span><br><span class="line">            <span class="keyword">if</span> ( a%b == <span class="number">0</span> ) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span> (b == a) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="计算1-100之间出现数字9的个数"><a href="#计算1-100之间出现数字9的个数" class="headerlink" title="计算1-100之间出现数字9的个数"></a>计算1-100之间出现数字9的个数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> a,b,c;</span><br><span class="line">    <span class="keyword">for</span> (a = <span class="number">1</span>; a&lt;=<span class="number">100</span>; a++) &#123;</span><br><span class="line">        <span class="comment">//求a的十位数字</span></span><br><span class="line">        b = a / <span class="number">10</span>;</span><br><span class="line"><span class="comment">//        printf(&quot;%d,&quot;,b);</span></span><br><span class="line">        <span class="comment">//求a的个位数字</span></span><br><span class="line">        c = a % <span class="number">10</span>;</span><br><span class="line"><span class="comment">//        printf(&quot;%d**\n**&quot;,c);</span></span><br><span class="line">        <span class="keyword">if</span> (b == <span class="number">9</span>) &#123;</span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="number">9</span>) &#123;</span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>想求一个数字的十位数字就用这个数字&#x2F;10，想求它的个位数字就%10。</p>
<h3 id="分数求和"><a href="#分数求和" class="headerlink" title="分数求和"></a>分数求和</h3><p>计算1&#x2F;1 - 1&#x2F;2 + 1&#x2F;3 - 1&#x2F;4 + 1&#x2F;5 …. + 1&#x2F;99 - 1&#x2F;100</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">float</span> a,c;</span><br><span class="line">    <span class="type">float</span> f = <span class="number">0.0</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> d = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (a = <span class="number">1</span>; a &lt;= <span class="number">100</span>; a++) &#123;</span><br><span class="line">        c = b/a;</span><br><span class="line"><span class="comment">//      printf(&quot;%f&quot;,c);</span></span><br><span class="line">        d++;</span><br><span class="line">        <span class="keyword">if</span> (d%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">            f = f + c;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            f = f - c;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%f&quot;</span>,f);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="求10个整数中的最大值"><a href="#求10个整数中的最大值" class="headerlink" title="求10个整数中的最大值"></a>求10个整数中的最大值</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">-12</span>,<span class="number">-23</span>,<span class="number">-43</span>,<span class="number">-21</span>,<span class="number">-34</span>,<span class="number">-74</span>,<span class="number">-24</span>,<span class="number">-53</span>,<span class="number">-4435</span>,<span class="number">-33</span>&#125;;<span class="comment">//先定义十个整数</span></span><br><span class="line">    <span class="type">int</span> max = arr[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] &gt;= max) &#123;</span><br><span class="line">            max = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,max);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="乘法口诀表"><a href="#乘法口诀表" class="headerlink" title="乘法口诀表"></a>乘法口诀表</h3><p>在屏幕上打印9*9乘法口诀表<br>1*1&#x3D;1<br>1*2&#x3D;2 2*2&#x3D;4<br>1*3&#x3D;3 2*3&#x3D;6  3*3&#x3D;9<br>1*4&#x3D;4 2*4&#x3D;8  3*4&#x3D;12  4*4&#x3D;16<br>1*5&#x3D;5 2*5&#x3D;10 3*5&#x3D;15 4*5&#x3D;20 5*5&#x3D;25<br>1*6&#x3D;6 2*6&#x3D;12 3*6&#x3D;18 4*6&#x3D;24 5*6&#x3D;30 6*6&#x3D;36<br>1*7&#x3D;7 2*7&#x3D;14 3*7&#x3D;21 4*7&#x3D;28 5*7&#x3D;35 6*7&#x3D;42 7*7&#x3D;49<br>1*8&#x3D;8 2*8&#x3D;16 3*8&#x3D;24 4*8&#x3D;32 5*8&#x3D;40 6*8&#x3D;48 7*8&#x3D;56 8*8&#x3D;64<br>1*9&#x3D;9 2*9&#x3D;18 3*9&#x3D;27 4*9&#x3D;36 5*9&#x3D;45 6*9&#x3D;54 7*9&#x3D;63 8*9&#x3D;72 9*9&#x3D;81</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> x,y,a;</span><br><span class="line">    <span class="keyword">for</span> (y=<span class="number">1</span>; y&lt;=<span class="number">9</span>; y++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (x=<span class="number">1</span>; x&lt;=<span class="number">9</span>; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (y&gt;=x) &#123;</span><br><span class="line">                a = x * y;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%-2d &quot;</span>,x,y,a);<span class="comment">//%-2d代表打印2位，不够2位补空格，负号代表左对齐，不带负号就是右对齐。</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (y==x) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>printf(&quot;%d*%d=%-2d &quot;,x,y,a);</code>，<code>-2d</code>代表打印2位，不够2位补空格，负号代表左对齐，不带负号就是右对齐。</p>
<h3 id="猜数字游戏"><a href="#猜数字游戏" class="headerlink" title="猜数字游戏"></a>猜数字游戏</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">menu</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;************************\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;***  1.play  0.exit  ***\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;************************\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">game</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1、生成随机数</span></span><br><span class="line">    <span class="type">int</span> ret;</span><br><span class="line">    <span class="type">int</span> guess = <span class="number">0</span>;</span><br><span class="line">    ret = rand()%<span class="number">100</span>+<span class="number">1</span>;<span class="comment">//生成1-100之间的随机数。</span></span><br><span class="line"><span class="comment">//  printf(&quot;%d**\n**&quot;,ret);//打印生成的随机数</span></span><br><span class="line">    <span class="comment">//2、猜数字</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请猜数字：-&gt;&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;guess);</span><br><span class="line">        <span class="keyword">if</span> (guess &gt; ret) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;猜大了\n&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(guess &lt; ret)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;猜小了\n&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;猜对了\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> input = <span class="number">0</span>;</span><br><span class="line">    srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="comment">//用时间戳来设置随机数生成起点，一直在变化</span></span><br><span class="line">    <span class="comment">//time函数</span></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        menu();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请选择：-&gt;&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;input);</span><br><span class="line">        <span class="keyword">switch</span> (input) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                game();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;退出游戏\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;选择错误\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (input);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>srand((unsigned int)time(NULL));</code>生成随机数。<br>使用time函数，用时间戳来设置随机数生成起点，这可以让数字一直在变化。<br><code>ret = rand()%100+1;</code>使生成的随机数在1-100之间。</p>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言实现三字棋</title>
    <url>/posts/d9fcdcdf.html</url>
    <content><![CDATA[<p>main.c</p>
<span id="more"></span>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;game.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;***************************\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;***   1.Play   2.Exit   ***\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;***************************\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">game</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//游戏的实现。</span></span><br><span class="line">    <span class="comment">//先创建一个数组，存放棋盘信息</span></span><br><span class="line">    <span class="type">char</span> board[ROW][COL] = &#123;<span class="number">0</span>&#125;;<span class="comment">//全部是空格</span></span><br><span class="line">    <span class="type">char</span> ret = <span class="number">0</span>;</span><br><span class="line">    InitBoard(board,ROW,COL);</span><br><span class="line">    <span class="comment">//打印棋盘，效果：</span></span><br><span class="line">    <span class="comment">//   |   |</span></span><br><span class="line">    <span class="comment">//---|---|---</span></span><br><span class="line">    <span class="comment">//   |   |</span></span><br><span class="line">    <span class="comment">//---|---|---</span></span><br><span class="line">    <span class="comment">//   |   |</span></span><br><span class="line">    DisplayBoard(board,ROW,COL);</span><br><span class="line">    <span class="comment">//下棋</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//玩家先下棋</span></span><br><span class="line">        PlayerMove(board,ROW,COL);</span><br><span class="line">        DisplayBoard(board,ROW,COL);</span><br><span class="line">        <span class="comment">//判读玩家是否赢,四种情况：玩家赢（*），电脑赢（#），平局（Q），游戏继续（C）</span></span><br><span class="line">        ret = Is_Win(board,ROW,COL);</span><br><span class="line">        <span class="keyword">if</span> (ret != <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//电脑下棋</span></span><br><span class="line">        ComputerMove(board,ROW,COL);</span><br><span class="line">        DisplayBoard(board,ROW,COL);</span><br><span class="line">        <span class="comment">//判读电脑是否赢</span></span><br><span class="line">        ret = Is_Win(board,ROW,COL);</span><br><span class="line">        <span class="keyword">if</span> (ret != <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ret == <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;玩家赢\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(ret == <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;电脑赢\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;平局\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> input = <span class="number">0</span>;</span><br><span class="line">    srand((<span class="type">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">do</span> </span><br><span class="line">    &#123;</span><br><span class="line">        menu();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入：-&gt;&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;input);</span><br><span class="line">        <span class="keyword">switch</span> (input) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                game();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;退出游戏\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;输入错误，请重新输入。\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (input);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    test();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>game.h</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//函数声明</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DisplayBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PlayerMove</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">ComputerMove</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>;</span><br><span class="line"><span class="type">char</span> <span class="title function_">Is_Win</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>;</span><br></pre></td></tr></table></figure>
<p>game.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;game.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;row; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j&lt;col; j++) </span><br><span class="line">        &#123;</span><br><span class="line">            board[i][j] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="type">void</span> <span class="title function_">DisplayBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//打印棋盘，效果：</span></span><br><span class="line">    <span class="comment">//   |   |</span></span><br><span class="line">    <span class="comment">//---|---|---</span></span><br><span class="line">    <span class="comment">//   |   |</span></span><br><span class="line">    <span class="comment">//---|---|---</span></span><br><span class="line">    <span class="comment">//   |   |</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;row; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//1、打印一行的数据</span></span><br><span class="line">        <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j&lt;col; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %c &quot;</span>,board[i][j]);</span><br><span class="line">            <span class="keyword">if</span> (j &lt; col - <span class="number">1</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;|&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="comment">//2、打印分割行</span></span><br><span class="line">            <span class="keyword">if</span> (i&lt;row<span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; col; j++) </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;---&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (j&lt;col<span class="number">-1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;|&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line"><span class="type">void</span> <span class="title function_">PlayerMove</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;玩家走&quot;</span>);</span><br><span class="line">    <span class="comment">//判断x,y坐标的合法性</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入坐标：-&gt;&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        <span class="keyword">if</span>(x&gt;=<span class="number">1</span> &amp;&amp; x&lt;=row &amp;&amp; y&gt;=<span class="number">1</span> &amp;&amp;y&lt;= col)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(board[x<span class="number">-1</span>][y<span class="number">-1</span>] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                board[x<span class="number">-1</span>][y<span class="number">-1</span>] = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//跳出循环</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;该坐标被占用\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;坐标非法，请重新输入\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="type">void</span> <span class="title function_">ComputerMove</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;电脑走：&gt;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        x = rand() % row;</span><br><span class="line">        y = rand() % col;</span><br><span class="line">        <span class="keyword">if</span> (board[x][y] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            board[x][y] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回1表示棋盘满，0表示继续</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsFull</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;row; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j&lt;col; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (board[i][j] == <span class="string">&#x27; &#x27;</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> <span class="title function_">Is_Win</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//判断横三行</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;row; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (board[i][<span class="number">0</span>]==board[i][<span class="number">1</span>] &amp;&amp; board[i][<span class="number">1</span>]==board[i][<span class="number">2</span>] &amp;&amp; board[i][<span class="number">1</span>] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> board[i][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//竖三列</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;col; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(board[<span class="number">0</span>][i]==board[<span class="number">1</span>][i] &amp;&amp; board[<span class="number">1</span>][i]==board[<span class="number">2</span>][i] &amp;&amp; board[<span class="number">1</span>][i] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> board[<span class="number">0</span>][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//两个对角线</span></span><br><span class="line">    <span class="keyword">if</span> (board[<span class="number">0</span>][<span class="number">0</span>]==board[<span class="number">1</span>][<span class="number">1</span>] &amp;&amp; board[<span class="number">1</span>][<span class="number">1</span>]==board[<span class="number">2</span>][<span class="number">2</span>] &amp;&amp; board[<span class="number">1</span>][<span class="number">1</span>] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> board[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (board[<span class="number">0</span>][<span class="number">0</span>]==board[<span class="number">1</span>][<span class="number">1</span>] &amp;&amp; board[<span class="number">1</span>][<span class="number">1</span>]==board[<span class="number">2</span>][<span class="number">2</span>] &amp;&amp; board[<span class="number">1</span>][<span class="number">1</span>] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> board[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断是否平局</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="number">1</span> == IsFull(board,ROW,COL))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Q&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言实现扫雷</title>
    <url>/posts/7758abcf.html</url>
    <content><![CDATA[<p>main.c</p>
<span id="more"></span>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;game.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;***************************\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;***   1.Play   0.Exit   ***\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;***************************\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">game</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1、布置雷的信息</span></span><br><span class="line">    <span class="type">char</span> mine[ROWS][COLS] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="comment">//2、排雷</span></span><br><span class="line">    <span class="type">char</span> show[ROWS][COLS] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="comment">//3、初始化</span></span><br><span class="line">    Init_Board(mine,ROWS,COLS,<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    Init_Board(show,ROWS,COLS,<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">    <span class="comment">//打印棋盘</span></span><br><span class="line">    DisplayBoard(show,ROW,COL);</span><br><span class="line">    <span class="comment">//布置雷</span></span><br><span class="line">    SetMine(mine,ROW,COL);</span><br><span class="line">    <span class="comment">//DisplayBoard(mine,ROW,COL);</span></span><br><span class="line">    <span class="comment">//扫雷</span></span><br><span class="line">    FindMine(mine,show,ROW,COL);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> input = <span class="number">0</span>;</span><br><span class="line">    srand((<span class="type">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        menu();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请选择：-&gt;&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;input);</span><br><span class="line">        <span class="keyword">switch</span> (input) </span><br><span class="line">       &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                game();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;退出游戏\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;输入错误，请重新输入\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (input);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>game.h</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 9</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 9</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROWS ROW+2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COLS COL+2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EASY_COUNT 10</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Init_Board</span><span class="params">(<span class="type">char</span> board[ROWS][COLS],<span class="type">int</span> rows,<span class="type">int</span> cols,<span class="type">char</span> <span class="built_in">set</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DisplayBoard</span><span class="params">(<span class="type">char</span> board[ROWS][COLS],<span class="type">int</span> row,<span class="type">int</span> col)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">SetMine</span><span class="params">(<span class="type">char</span> board[ROWS][COLS],<span class="type">int</span> row,<span class="type">int</span> col)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">FindMine</span><span class="params">(<span class="type">char</span> mine[ROWS][COLS],<span class="type">char</span> show[ROWS][COLS],<span class="type">int</span> row,<span class="type">int</span> col)</span>;</span><br></pre></td></tr></table></figure>

<p>game.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;game.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Init_Board</span><span class="params">(<span class="type">char</span> board[ROWS][COLS],<span class="type">int</span> rows,<span class="type">int</span> cols,<span class="type">char</span> <span class="built_in">set</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;rows; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;cols; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            board[i][j] = <span class="built_in">set</span>;<span class="comment">//初始化成0和*</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisplayBoard</span><span class="params">(<span class="type">char</span> board[ROWS][COLS],<span class="type">int</span> row,<span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//打印列号</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=col; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= row; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        <span class="keyword">for</span> (j =<span class="number">1</span>; j &lt;= col; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c &quot;</span>,board[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">SetMine</span><span class="params">(<span class="type">char</span> board[ROWS][COLS],<span class="type">int</span> row,<span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> count = EASY_COUNT;</span><br><span class="line">    <span class="keyword">while</span> (count) &#123;</span><br><span class="line">        <span class="comment">//布置雷</span></span><br><span class="line">        <span class="type">int</span> x = rand()%row+<span class="number">1</span>;<span class="comment">//生成一个1-9之间的数字</span></span><br><span class="line">        <span class="type">int</span> y = rand()%col+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (board[x][y] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            board[x][y] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">            count--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x27;1&#x27;-&#x27;0&#x27; = 1,字符1-字符0就是数字1（根据ASCII码）</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">get_mine_count</span><span class="params">(<span class="type">char</span>** mine[ROWS][COLS],<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> mine[x<span class="number">-1</span>][y<span class="number">-1</span>] +</span><br><span class="line">    mine[x][y<span class="number">-1</span>] +</span><br><span class="line">    mine[x+<span class="number">1</span>][y<span class="number">-1</span>] +</span><br><span class="line">    mine[x<span class="number">-1</span>][y] +</span><br><span class="line">    mine[x+<span class="number">1</span>][y] +</span><br><span class="line">    mine[x<span class="number">-1</span>][y+<span class="number">1</span>] +</span><br><span class="line">    mine[x][y+<span class="number">1</span>] +</span><br><span class="line">    mine[x+<span class="number">1</span>][y+<span class="number">1</span>] - <span class="number">8</span>*<span class="string">&#x27;0&#x27;</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">FindMine</span><span class="params">(<span class="type">char</span> mine[ROWS][COLS],<span class="type">char</span> show[ROWS][COLS],<span class="type">int</span> row,<span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> win = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (win &lt; row*col-EASY_COUNT)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入坐标-&gt;:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        <span class="keyword">if</span> (x&gt;=<span class="number">1</span> &amp;&amp; x&lt;=row &amp;&amp; y&gt;=<span class="number">1</span> &amp;&amp; y&lt;=col)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//坐标合法</span></span><br><span class="line">            <span class="comment">//踩雷了</span></span><br><span class="line">            <span class="keyword">if</span> (mine[x][y] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;踩雷了\n&quot;</span>);</span><br><span class="line">                DisplayBoard(mine, row, col);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//没踩雷，计算x,y坐标周围有几个雷</span></span><br><span class="line">                <span class="type">int</span> count = get_mine_count(mine,x,y);</span><br><span class="line">                show[x][y] = count +<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                DisplayBoard(show, row, col);</span><br><span class="line">                win++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;坐标非法\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (win == row*col-EASY_COUNT)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;赢了\n&quot;</span>);</span><br><span class="line">        DisplayBoard(mine, row, col);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环练习-计算1!+2!+3!+...+n!</title>
    <url>/posts/852d9224.html</url>
    <content><![CDATA[<h3 id="使用for循环实现"><a href="#使用for循环实现" class="headerlink" title="使用for循环实现"></a>使用for循环实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a,b,n;</span><br><span class="line">    <span class="type">int</span> c = <span class="number">1</span>,d = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;计算1!+2!+3!+...+n!\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入n -&gt;：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">       <span class="keyword">for</span> (a=<span class="number">1</span>; a&lt;n ; a++) &#123;</span><br><span class="line">           b = a + <span class="number">1</span>;</span><br><span class="line">           c = b * c;</span><br><span class="line">           d = d + c;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,d);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h3 id="使用while循环实现"><a href="#使用while循环实现" class="headerlink" title="使用while循环实现"></a>使用while循环实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> b,n;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">1</span>,c = <span class="number">1</span>,d = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;计算1!+2!+3!+...+n!\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入n -&gt;：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">while</span> (a&lt;n) &#123;</span><br><span class="line">        b = a + <span class="number">1</span>;</span><br><span class="line">        c = b * c;</span><br><span class="line">        d = d + c;</span><br><span class="line">        a++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环练习-计算n的阶乘</title>
    <url>/posts/6e4091aa.html</url>
    <content><![CDATA[<h3 id="使用for循环实现"><a href="#使用for循环实现" class="headerlink" title="使用for循环实现"></a>使用for循环实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a,n,b;</span><br><span class="line">    <span class="type">int</span> c = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入要计算阶乘的n -&gt;：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (a=<span class="number">1</span>; a&lt;n ; a++) &#123;</span><br><span class="line">        b = a + <span class="number">1</span>;</span><br><span class="line">        c = b*c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,c);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h3 id="使用while循环实现"><a href="#使用while循环实现" class="headerlink" title="使用while循环实现"></a>使用while循环实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>,b = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入要计算阶乘的n -&gt;：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">while</span> (a&lt;n) &#123;</span><br><span class="line">        a = a + <span class="number">1</span>;</span><br><span class="line">        b = a * b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOs下将Hexo部署到Github Pages</title>
    <url>/posts/d37d0038.html</url>
    <content><![CDATA[<p><a href="hexo.io">Hexo</a>是一个快速、简洁且高效的博客框架。得益于Node.js的快速生成速度，几百个网页可在几秒钟内生成。<br>Hexo支持Markdown的所有功能，只需一条指令即可部署成功。</p>
<span id="more"></span>
<h2 id="一、配置本地环境"><a href="#一、配置本地环境" class="headerlink" title="一、配置本地环境"></a>一、配置本地环境</h2><h3 id="1、安装Homebrew"><a href="#1、安装Homebrew" class="headerlink" title="1、安装Homebrew"></a>1、安装<a href="https://brew.sh/">Homebrew</a></h3><p>将下面的命令复制到MacOs终端以安装<a href="https://brew.sh/">Homebrew</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span><br></pre></td></tr></table></figure>
<h3 id="2、安装git"><a href="#2、安装git" class="headerlink" title="2、安装git"></a>2、安装<a href="https://git-scm.com/">git</a></h3><p>在终端输入下面的命令安装<a href="https://git-scm.com/">git</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure>
<h3 id="3、安装Node-js"><a href="#3、安装Node-js" class="headerlink" title="3、安装Node.js"></a>3、安装<a href="https://nodejs.org/zh-cn/">Node.js</a></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure>
<h3 id="4、安装Hexo"><a href="#4、安装Hexo" class="headerlink" title="4、安装Hexo"></a>4、安装<a href="https://hexo.io/zh-cn/">Hexo</a></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<h3 id="5、安装git部署服务"><a href="#5、安装git部署服务" class="headerlink" title="5、安装git部署服务"></a>5、安装git部署服务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<h3 id="6、使用Hexo创建本地网站"><a href="#6、使用Hexo创建本地网站" class="headerlink" title="6、使用Hexo创建本地网站"></a>6、使用<a href="https://hexo.io/zh-cn/">Hexo</a>创建本地网站</h3><h4 id="（1）新建网站文件夹"><a href="#（1）新建网站文件夹" class="headerlink" title="（1）新建网站文件夹"></a>（1）新建网站文件夹</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir blog</span><br></pre></td></tr></table></figure>
<h4 id="（2）进入网站目录并使用Hexo生成网站"><a href="#（2）进入网站目录并使用Hexo生成网站" class="headerlink" title="（2）进入网站目录并使用Hexo生成网站"></a>（2）进入网站目录并使用Hexo生成网站</h4><p>在终端输入以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd blog</span><br><span class="line">hexo init blog</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>访问 <a href="http://localhost:4000/">http://localhost:4000</a> ，查看到Hexo初始界面，即Hexo本地配置成功。<br>在终端输入control+c退出预览。</p>
<h2 id="二、配置GitHub-Pages"><a href="#二、配置GitHub-Pages" class="headerlink" title="二、配置GitHub Pages"></a>二、配置GitHub Pages</h2><h3 id="1、注册GitHub账户"><a href="#1、注册GitHub账户" class="headerlink" title="1、注册GitHub账户"></a>1、注册GitHub账户</h3><h3 id="2、创建新仓库"><a href="#2、创建新仓库" class="headerlink" title="2、创建新仓库"></a>2、创建新仓库</h3><p>仓库名称为：yourname.github.io(yourname必须为自己的github ID)</p>
<h3 id="3、修改Hexo全局配置文件"><a href="#3、修改Hexo全局配置文件" class="headerlink" title="3、修改Hexo全局配置文件"></a>3、修改Hexo全局配置文件</h3><p>更改网站根目录下_config.yml文件，在文件最后添加以下内容。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>将yourname修改为自己的github ID</p>
<h2 id="三、配置SSH-KEY"><a href="#三、配置SSH-KEY" class="headerlink" title="三、配置SSH KEY"></a>三、配置SSH KEY</h2><h3 id="1、生成SSH-KEY"><a href="#1、生成SSH-KEY" class="headerlink" title="1、生成SSH KEY"></a>1、生成SSH KEY</h3><p>打开终端，输入以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;Your Email Address&quot;</span><br></pre></td></tr></table></figure>
<p>提示输入密码和确认密码，如不想设置可以单击回车。</p>
<h3 id="2、将SSH-KEY-添加到GitHub"><a href="#2、将SSH-KEY-添加到GitHub" class="headerlink" title="2、将SSH KEY 添加到GitHub"></a>2、将SSH KEY 添加到GitHub</h3><p>单击访达➡️前往➡️个人➡️.ssh➡️id_rsa.pub，并复制id_rsa.pub的全部内容<br>找不到.ssh文件夹可以点击shift+command+. ，即可显示隐藏的文件夹。<br>打开GitHub主页，点击头像进入setting，点击SSH and GPG keys，在点击New SSH Key。将内容复制进key，tittle内容可以为空。最后点击Add SSH key<br>在终端输入以下命令以测试是否成功：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@GitHub.com</span><br></pre></td></tr></table></figure>
<p>接下来会提示是否继续连接，在终端输入yes。<br>若出现以下提示，即SSH Key 添加成功。</p>
<h2 id="四、将本地内容上传到github"><a href="#四、将本地内容上传到github" class="headerlink" title="四、将本地内容上传到github"></a>四、将本地内容上传到github</h2><p>终端进入网站目录，并输入以下命令。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
        <tag>Github Pages</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub学生开发者包申请攻略</title>
    <url>/posts/f8c9fa9d.html</url>
    <content><![CDATA[<h3 id="1、进入申请页面"><a href="#1、进入申请页面" class="headerlink" title="1、进入申请页面"></a>1、进入申请页面</h3><p>进入<a href="https://education.github.com/pack">GitHub Student Developer Pack</a>，点击绿色的Sign up for Student Developer Pack 注册学生开发者包，随后点击Get student benefits进入填写验证材料的页面。</p>
<div class="admonition note"><p>1、如果浏览器需要位置信息权限，则一定要允许。
2、申请时将VPN关闭。</p>
</div>

<span id="more"></span>

<p><img src="/posts/f8c9fa9d/1.jpg" alt="注册步骤"></p>
<h3 id="2、填写验证信息"><a href="#2、填写验证信息" class="headerlink" title="2、填写验证信息"></a>2、填写验证信息</h3><p><img src="/posts/f8c9fa9d/2.png" alt="信息填写页面"></p>
<p>E-mail处最好填写学校的edu邮箱，如果没有也可使用私人邮箱。想要绑定新的校园邮箱，可点击Add an email address并根据提示进行添加。</p>
<p>What is the name of your school：用英文输入学校的全名，并选择弹出的选项。如果下拉选项中没有你的学校，则使用英文输入学校全名并进行下一步。</p>
<p>How do you plan to use GitHub?：用英文输入申请的目的。（例如：I use GitHub for study）</p>
<p>以上内容填写并检查好后点击Continue进行下一步。</p>
<h3 id="3、上传学生身份证明"><a href="#3、上传学生身份证明" class="headerlink" title="3、上传学生身份证明"></a>3、上传学生身份证明</h3><p>准备好学生卡、学生证以及学信网的验证报告。</p>
<p><img src="/posts/f8c9fa9d/3.png" alt="身份证明"></p>
<p>将照片放入Word中整理好并附上英文说明，如上图所示。英文说明可以参考上图，着重写出这些文件的有效期。</p>
<p>如果你不能通过上传的方式验证，那么需要将本页打印出，并通过摄像头拍摄。</p>
<p>本页填写好确认无误后，点击Process my application提交。</p>
<h3 id="4、通过申请"><a href="#4、通过申请" class="headerlink" title="4、通过申请"></a>4、通过申请</h3><p>提交后，可能会立即收到通过邮件，否则会在几天内收到邮件。</p>
<p><img src="/posts/f8c9fa9d/4.png" alt="通过验证"></p>
<p>如果未通过，则确定好填写的信息和证明文件的清晰度，多提交几次，一般就可以通过了。</p>
]]></content>
      <tags>
        <tag>Github</tag>
        <tag>学生优惠</tag>
        <tag>开发者包</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac下校验文件的MD5</title>
    <url>/posts/b8295e0f.html</url>
    <content><![CDATA[<p>为了避免文件在传输过程中损坏或被恶意篡改，我们可以校验下载后文件的MD5，与提供的MD5对比。若两者不一致，则该文件损坏或已被修改。</p>
<span id="more"></span>

<p>1、打开终端。</p>
<p>2、在终端内输入以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">md5 [文件路径]</span><br></pre></td></tr></table></figure>

<div class="admonition note"><p>文件路径可通过拖拽文件至终端内获得。</p>
</div>

<p>3、输入回车，等待结果。（若文件较大可能校验时间更久）</p>
<p><img src="/posts/b8295e0f/1.jpg" alt="所校验文件的MD5"></p>
<p>红框内为所校验文件的MD5</p>
]]></content>
      <tags>
        <tag>md5</tag>
        <tag>MacOs</tag>
      </tags>
  </entry>
  <entry>
    <title>getchar和putchar</title>
    <url>/posts/c306e3ff.html</url>
    <content><![CDATA[<p>只输出数字字符，非数字字符不输出</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//只输出数字字符，非数字字符不输出</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != EOF) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(ch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> password[<span class="number">20</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入密码：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,password);<span class="comment">//输入密码，并存放到password数组中</span></span><br><span class="line">    <span class="comment">//缓冲区还剩一个\n</span></span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#123;</span><br><span class="line">        ;<span class="comment">//空语句，不需要做什么</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//直到把缓冲区的\n读取走</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请确认（Y/N）：&quot;</span>);</span><br><span class="line">    ret = getchar();</span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;确认成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;放弃确认&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>函数和递归（二）</title>
    <url>/posts/65cc8f41.html</url>
    <content><![CDATA[<p>一个函数调用自身就是递归。<br>通常可以把大型复杂问题转换成与原文题相似但规模较小的问题求解。</p>
<span id="more"></span>
<p>最简单的递归程序：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;递归\n&quot;</span>);</span><br><span class="line">    main();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>递归常见的错误：栈溢出</p>
<hr>
<p>练习1：接受一个整型值（无符号），按照顺序打印它的每一位。例如：输入：1234，输出1 2 3 4</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (n&gt;<span class="number">9</span>) &#123;</span><br><span class="line">        print(n/<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,n%<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line">    <span class="comment">//递归</span></span><br><span class="line">    print(num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/posts/65cc8f41/img1.png" alt="递归"></p>
<p>递归在书写时一定要写条件，不要让递归无限循环下去！</p>
<h4 id="递归的两个必要条件"><a href="#递归的两个必要条件" class="headerlink" title="递归的两个必要条件"></a>递归的两个必要条件</h4><ul>
<li>﻿存在限制条件，x当满足这个限制条件的时候，递归便不再继续。</li>
<li>﻿﻿每次递归调用之后越来越接近这个限制条件</li>
</ul>
<hr>
<p>练习二：编写函数，不允许创建临时变量，求字符串长度<br>使用临时变量的方法：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">my_strlen</span><span class="params">(<span class="type">char</span>* str)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (*str !=<span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">        count++;</span><br><span class="line">        str++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> arr[] = <span class="string">&quot;bit&quot;</span>;</span><br><span class="line">    <span class="comment">//模拟实现了一个strlen函数</span></span><br><span class="line">    <span class="type">int</span> len = my_strlen(arr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>不创建临时变量：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">my_strlen</span><span class="params">(**<span class="type">char</span>*** str)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(*str != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>+my_strlen(str+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> arr[] = <span class="string">&quot;bit&quot;</span>;</span><br><span class="line">    <span class="comment">//模拟实现了一个strlen函数</span></span><br><span class="line">    <span class="type">int</span> len = my_strlen(arr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="递归与迭代"><a href="#递归与迭代" class="headerlink" title="递归与迭代"></a>递归与迭代</h3><p>练习3:求n的阶乘<br>不使用递归</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Fac1</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        ret = ret * i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    ret = Fac1(n);<span class="comment">//用循环的方式实现</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ret);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用递归的方式</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Fac2</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (n&lt;=<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> n*Fac2(n<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    ret = Fac2(n);<span class="comment">//用循环的方式实现</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ret);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p>练习4:斐波那契数列<br>前两个数之和等于第三个数字</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Fib</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Fib(n<span class="number">-1</span>)+Fib(n<span class="number">-2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    ret = Fib(n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ret);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面代码的优化：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Fib</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> c = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (n&gt;<span class="number">2</span>) &#123;</span><br><span class="line">        c = a + b;</span><br><span class="line">        a = b;</span><br><span class="line">        b = c;</span><br><span class="line">        n--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    ret = Fib(n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ret);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>函数递归的经典问题：</p>
<ul>
<li>汉诺塔问题</li>
<li>青蛙跳台阶问题</li>
</ul>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>函数练习</title>
    <url>/posts/5e885ad9.html</url>
    <content><![CDATA[<h3 id="写函数判断一个数是否为素数"><a href="#写函数判断一个数是否为素数" class="headerlink" title="写函数判断一个数是否为素数"></a>写函数判断一个数是否为素数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Prime_Number</span><span class="params">(<span class="type">int</span>* pnum)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x,i,z=<span class="number">0</span>;</span><br><span class="line">    x = *pnum;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; x; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x%i == <span class="number">0</span>) &#123;</span><br><span class="line">            z = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (z==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入的数字是素数&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入的数字不是素数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> num,a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;判断一个数是否为素数\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个数字:-&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line">    Prime_Number(&amp;num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//是素数返回1，不是返回0</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">is_Prime</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n%i == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i =<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">100</span>; i&lt;=<span class="number">200</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (is_Prime(i) == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="写一个函数判断一年是否为闰年"><a href="#写一个函数判断一年是否为闰年" class="headerlink" title="写一个函数判断一年是否为闰年"></a>写一个函数判断一年是否为闰年</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Leap_Year</span><span class="params">(<span class="type">int</span> a)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ((a % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; a % <span class="number">100</span> != <span class="number">0</span> )|| a % <span class="number">400</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;判断一年是否为闰年\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入年份:-&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">if</span> (Leap_Year(x)==<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;是闰年\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;不是闰年\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="函数实现一个整型有序数组的二分查找"><a href="#函数实现一个整型有序数组的二分查找" class="headerlink" title="函数实现一个整型有序数组的二分查找"></a>函数实现一个整型有序数组的二分查找</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">binary_search</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> k,<span class="type">int</span> sz)</span><span class="comment">//实参和形参的名字相同是可以的</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//算法的实现</span></span><br><span class="line">    <span class="type">int</span> left = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//    int sz = sizeof(arr)/sizeof(arr[0]);//传过去的arr不是数组，本质上arr是指针，只是首元素的地址</span></span><br><span class="line">    <span class="type">int</span> right = sz - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (left&lt;=right) &#123;</span><br><span class="line">        <span class="type">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (arr[mid] &lt; k)</span><br><span class="line">        &#123;</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (arr[mid] &gt; k) &#123;</span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//二分查找-在一个有序数组中查找具体的某个数</span></span><br><span class="line">    <span class="comment">//找到了返回这个数的下标，找不到返回-1</span></span><br><span class="line">    <span class="type">int</span> arr[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="type">int</span> k = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">int</span> ret = binary_search(arr,k,sz);</span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;找不到\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;找到了，下标是：%d\n&quot;</span>,ret);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="写一个函数，每调用一次，num加1"><a href="#写一个函数，每调用一次，num加1" class="headerlink" title="写一个函数，每调用一次，num加1"></a>写一个函数，每调用一次，num加1</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Record</span><span class="params">(<span class="type">int</span>* x)</span></span><br><span class="line">&#123;</span><br><span class="line">    (*x)++;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i,num = <span class="number">0</span>;</span><br><span class="line">    Record(&amp;num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);</span><br><span class="line">    Record(&amp;num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);</span><br><span class="line">    Record(&amp;num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Netlify免费加速GitHub Pages页面</title>
    <url>/posts/773db5f0.html</url>
    <content><![CDATA[<p>我们在使用Github Pages时会发现其在国内的访问速度非常缓慢，这无疑会影响页面的收录和访客的体验。本文介绍了如何加速Github Pages在国内的速度。</p>
<span id="more"></span>
<p>以下是使用Netlify加速后的访问速度。<br><img src="/posts/773db5f0/1.png" alt="加速后的访问速度"><br>可以看到加速后的页面在国内的访问速度是不错的。</p>
<p>首先，打开<a href="https://www.netlify.com/">Netlify</a>。点击sign up，并使用Github注册。<br><img src="/posts/773db5f0/2.png" alt="注册填写信息"><br>填写好基本的信息，并点击Set up and continue进入下一步。<br><img src="/posts/773db5f0/3.png" alt="点击Import from Git"><br>点击Import from Git从Git库中添加现有项目，进入GitHub授权界面。<br><img src="/posts/773db5f0/4.png" alt="授权界面"><br>在授权界面选择Only select repositories并选中要继续的库，选好后点击install。<br><img src="/posts/773db5f0/5.png" alt="选择库，并选择Branch"><br>接下来选中要使用Netlify的库，并选择Branch。选好后点击Deploy site。<br><img src="/posts/773db5f0/6.png" alt="Netlify管理后台"><br>接下来就进入到了Netlify的后台界面，依次点击Site settings→General→site details→change site name修改网站名称（也可以不修改），例如我的就是zmyu.netlify.app。<br><img src="/posts/773db5f0/7.png" alt="添加自定义域名"><br>进入到以上界面，并点击Add domain alias添加自定义域名，例如我的就是blog.zmyu.cc。<br><img src="/posts/773db5f0/8.png"></p>
<p><img src="/posts/773db5f0/9.png" alt="DNS后台"><br>进入DNS后台，并添加CNAME记录，记录值就是之前修改的域名（或默认的域名），例如我的就是zmyu.netlify.app。<br>设置好之后，等待一段时间后，就可以通过自定义的域名访问网站了。</p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Github Pages</tag>
        <tag>Netlify</tag>
        <tag>SEO</tag>
      </tags>
  </entry>
  <entry>
    <title>函数（一）</title>
    <url>/posts/8ecc5de7.html</url>
    <content><![CDATA[<p> 函数就是子程序，是一个大型程序中的某部分代码，由一个或多个语句块组成。它负责完成某项特定任务，而且相较于其他代码，具备相对的独立性。</p>
<p> 一般会有输入参数并有返回值，提供对过程的封装和细节的隐藏。这些代码通常被集成为软件库。</p>
<span id="more"></span>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span><span class="comment">//最前面的int表示这个函数最终会返回一个int型的值。</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> z = <span class="number">0</span>;</span><br><span class="line">    z = x + y;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> sum = Add(a,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的Add就是一个函数。</p>
<p>C语言中函数分类：</p>
<ul>
<li>库函数</li>
<li>自定义函数</li>
</ul>
<h3 id="库函数"><a href="#库函数" class="headerlink" title="库函数"></a>库函数</h3><p>什么是库函数？<br>——C语言本身提供使用的的就是库函数。<br>查询库函数参考：</p>
<ul>
<li><a href="http://www.cplusplus.com/">http://www.cplusplus.com</a></li>
<li><a href="http://zh.cppreference.com/">http://zh.cppreference.com</a><br>使用库函数需要查询文档。</li>
</ul>
<p>strcpy - string copy - 字符串拷贝<br>strlen - string length - 字符串长度有关<br>我们可以根据函数名称猜测用途 </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span><span class="comment">//使用strcpy函数需要这个头文件</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> arr1[] = <span class="string">&quot;bit&quot;</span>;</span><br><span class="line">    <span class="type">char</span> arr2[<span class="number">20</span>] = <span class="string">&quot;########&quot;</span>;</span><br><span class="line">    <span class="built_in">strcpy</span>(arr2,arr1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,arr2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>char * strcpy ( char * destination, const char * source );</code></p>
<p>memset - memory set - 内存设置</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> arr[] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">    <span class="built_in">memset</span>(arr, <span class="string">&#x27;*&#x27;</span>, <span class="number">5</span>);<span class="comment">//双引号引用字符串，单引号引用字符</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,arr);</span><br><span class="line">    <span class="comment">//打印的结果是：***** world</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>void * memset ( void * ptr, int value, size_t num );</code><br>打印的结果是：***** world</p>
<p><strong>双引号引用字符串，单引号引用字符</strong></p>
<h3 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h3><p>自定义函数和库函数一样，有函数名，返回值类型和函数参数。但不一样的是这些都由程序员自己设计。<br><img src="/posts/8ecc5de7/img1.png" alt="自定义函数"></p>
<h5 id="举个例子：写一个函数找出两个整数的最大值"><a href="#举个例子：写一个函数找出两个整数的最大值" class="headerlink" title="举个例子：写一个函数找出两个整数的最大值"></a>举个例子：写一个函数找出两个整数的最大值</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">MAX</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (x&gt;y) &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a,b,max;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入两个整数：-&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    max = MAX(a,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,max);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>指针变量和解引用：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span>* pa = &amp;a;<span class="comment">//pa就是指针变量</span></span><br><span class="line">    *pa = <span class="number">20</span>;<span class="comment">//解引用操作-通过pa里边存的地址找到a</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="https://blog.zmyu.cc/posts/64e9b9a8.html#%E6%8C%87%E9%92%88">指针</a></p>
<h5 id="举个例子：写一个函数交换两个整型变量的内容"><a href="#举个例子：写一个函数交换两个整型变量的内容" class="headerlink" title="举个例子：写一个函数交换两个整型变量的内容"></a>举个例子：写一个函数交换两个整型变量的内容</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Exchange</span><span class="params">(<span class="type">int</span>* pa,<span class="type">int</span>* pb)</span><span class="comment">//用指针接收a,b的地址</span></span><br><span class="line">&#123;   </span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    temp = *pa;</span><br><span class="line">    *pa = *pb;</span><br><span class="line">    *pb = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入a,b两个整型数字:-&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入的a = %d,b = %d\n&quot;</span>,a,b);</span><br><span class="line">    Exchange(&amp;a, &amp;b);<span class="comment">//调用Exchange函数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输出的a = %d,b = %d\n&quot;</span>,a,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意：下面的函数不能完成要求</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Exchange</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> temp;</span><br><span class="line">	temp = x;</span><br><span class="line">	x = y;</span><br><span class="line">	y = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>实参传给形参时，形参其实是实参的一份临时拷贝。<br>对形参的修改无法变成对实参的修改。<br>可以通过上面的指针（将地址传过去）的形式进行修改。</p>
<h3 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h3><h4 id="实际参数"><a href="#实际参数" class="headerlink" title="实际参数"></a>实际参数</h4><p>真实传递给函数的参数。<br>实际参数可以是：常量、变量、表达式、函数等。<br>无论实参是何种类型的量，在进行函数调用时，它们都必须有确定的值，以便把这些值传送给形参。</p>
<h4 id="形式参数"><a href="#形式参数" class="headerlink" title="形式参数"></a>形式参数</h4><p>函数名后括号中的变量。<br>形式参数只有在函数被调用的过程中才实例化（分配内存单元），所以叫形式参数。<br>形式参数当函数调用完成之后就自动销毁了。因此形式参数只在函数中有效。</p>
<h3 id="函数的调用"><a href="#函数的调用" class="headerlink" title="函数的调用"></a>函数的调用</h3><p>传值调用：<br>函数的形参和实参分别占有不同内存块，对形参的修改不会影响实参。<br><code>max = MAX(a,b);</code></p>
<p>传址调用</p>
<ul>
<li>传址调用是把函数外部创建变量的内存地址传递给函数参数的一种调用函数的方式。</li>
<li>﻿这种传参方式可以让函数和函数外边的变量建立起正真的联系，也就是函数内部可以直接操作函数外部的变量。<br><code>Exchange(&amp;a, &amp;b);</code></li>
</ul>
<h3 id="函数的嵌套调用和链式访问"><a href="#函数的嵌套调用和链式访问" class="headerlink" title="函数的嵌套调用和链式访问"></a>函数的嵌套调用和链式访问</h3><ul>
<li>嵌套调用：在一个函数中调用另一个函数。</li>
<li>链式访问：把一个函数的返回值作为另外一个函数的参数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//1</span></span><br><span class="line">    len = <span class="built_in">strlen</span>(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,len);</span><br><span class="line">    <span class="comment">//2、链式访问</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">strlen</span>(<span class="string">&quot;abc&quot;</span>));<span class="comment">//把strlen的返回值打印，和printf和strlen串在一起，像链条一样。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="number">43</span>)));<span class="comment">//打印的结果是4321，因为printf的返回结果是打印在屏幕上的字数。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="函数的声明和定义"><a href="#函数的声明和定义" class="headerlink" title="函数的声明和定义"></a>函数的声明和定义</h3><p> 可以让代码逻辑更清晰，结构明了。</p>
<p>函数的声明和定义在同一文件（一般不这样用）：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>;<span class="comment">//在同一文件,函数的声明一般出现在函数的使用之前。要满足先声明后使用。</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//函数调用</span></span><br><span class="line">    sum = Add(a,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数的定义</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> z = x + y;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>函数的声明和定义分开写（结构明了）：<br>main.h</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Add.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//函数调用</span></span><br><span class="line">    sum = Add(a,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Add.h</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __ADD_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __ADD_H__</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p>Add.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> z = x + y;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环之do...while循环</title>
    <url>/posts/44b3ffc2.html</url>
    <content><![CDATA[<p>语法：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    循环语句;</span><br><span class="line">&#125; <span class="keyword">while</span> (表达式);</span><br></pre></td></tr></table></figure>
<p>do语句的特点：循环至少执行一次，使用场景有限。</p>
<span id="more"></span>

<h3 id="使用do…while打印1-10的数字"><a href="#使用do…while打印1-10的数字" class="headerlink" title="使用do…while打印1-10的数字"></a>使用do…while打印1-10的数字</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//打印1-10的数字</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        i++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (i&lt;=<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//当1==5的时候就终止循环了</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);<span class="comment">//打印的结果是1 2 3 4</span></span><br><span class="line">        i++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (i&lt;=<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);<span class="comment">//打印的结果是1 2 3 4后死循环</span></span><br><span class="line">        i++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (i&lt;=<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环之for循环</title>
    <url>/posts/144e24ab.html</url>
    <content><![CDATA[<p>语法：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(表达式<span class="number">1</span>:表达式<span class="number">2</span>:表达式<span class="number">3</span>)</span><br><span class="line">	&#123;</span><br><span class="line">	    循环语句;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>
<p>表达式1是 初始化部分，用于 初始化循环变量。<br>表达式2是 条件判断部分，用于 判断循环时候终止。<br>表达式3是 调整部分，用于 循环条件的调整</p>
<p><img src="/posts/144e24ab/img1.png" alt="for语句图解"></p>
<p>while循环实现i自增到10</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;<span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">while</span> (i&lt;<span class="number">10</span>) &#123;<span class="comment">//判断</span></span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">        i++;<span class="comment">//调整</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="for循环实现i自增到10"><a href="#for循环实现i自增到10" class="headerlink" title="for循环实现i自增到10"></a>for循环实现i自增到10</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//初始化，判断，调整</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=<span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//初始化，判断，调整</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=<span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">5</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);<span class="comment">//打印的结果是1 2 3 4</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印的结果是1 2 3 4，当i==5时，跳出了for循环。</p>
<h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//初始化，判断，调整</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=<span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">5</span>)</span><br><span class="line">            <span class="keyword">continue</span>;<span class="comment">//continue 跳过了打印5，又回到了for循环的判断</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);<span class="comment">//打印的结果是1 2 3 4 6 7 8 9 10</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>continue 跳过了打印5，又回到了for循环的判断。</p>
<h3 id="不可以在for循环内部改变循环变量，防止for循环失去控制"><a href="#不可以在for循环内部改变循环变量，防止for循环失去控制" class="headerlink" title="不可以在for循环内部改变循环变量，防止for循环失去控制"></a>不可以在for循环内部改变循环变量，防止for循环失去控制</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i = <span class="number">5</span>)<span class="comment">//这里不是判断，是赋值。这里修改了for循环内部的循环变量，导致死循环</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;haha\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="建议for语句的循环控制变量的取值采用“前闭后开区间”写法"><a href="#建议for语句的循环控制变量的取值采用“前闭后开区间”写法" class="headerlink" title="建议for语句的循环控制变量的取值采用“前闭后开区间”写法"></a>建议for语句的循环控制变量的取值采用“前闭后开区间”写法</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)<span class="comment">//这里尽量写i&lt;10，而不是i&lt;=9。虽然运行结果一致，但显然前面的写法是有意义的，代表10次打印（循环、元素）</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>for (i=0;i&lt;10;i++)&#123;...&#125;</code>这里尽量写i &lt; 10，而不是i &lt;&#x3D; 9。虽然运行结果一致，但显然前面的写法是有意义的，代表10次打印（循环、元素）。</p>
<h3 id="一些for循环的变种"><a href="#一些for循环的变种" class="headerlink" title="一些for循环的变种"></a>一些for循环的变种</h3><p>变种一</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>for循环的初始化、调整、判断均可省略。<br>for循环的判断部分一旦省略，判断结果一直是真，导致死循环。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;<span class="number">10</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);<span class="comment">//打印的结果是100个hehe</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上例打印的结果是100个hehe。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (; j&lt;<span class="number">10</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);<span class="comment">//打印的结果是10个hehe</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上例打印的结果是10个hehe。</p>
<p>变种二：两个循环变量</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    <span class="keyword">for</span> (x=<span class="number">0</span>,y=<span class="number">0</span>; x&lt;<span class="number">2</span> &amp;&amp; y&lt;<span class="number">5</span>; ++x,y++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);<span class="comment">//用了2个循环变量，打印的结果是两个hehe</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上例打印的结果是两个hehe。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>,k=<span class="number">0</span>; k=<span class="number">0</span>; i++,k++)<span class="comment">//中间的判断部分k=0是判断，0为假，不进入for循环，循环0次</span></span><br><span class="line">        k++;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>由于0代表恒为假，不进入for循环。</p>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环之switch语句</title>
    <url>/posts/1c24259b.html</url>
    <content><![CDATA[<p>switch语句是一种分支语句，常用于多分支情况。<br>switch允许嵌套使用。</p>
<span id="more"></span>

<h4 id="输入数字判断星期几"><a href="#输入数字判断星期几" class="headerlink" title="输入数字判断星期几"></a>输入数字判断星期几</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> day = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;day);</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">1</span> == day) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;星期一&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">2</span> == day) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期二&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">3</span> == day) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;星期三&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">4</span> == day) &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;星期四&quot;</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="number">5</span> == day) &#123;</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">&quot;星期五&quot;</span>);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (<span class="number">6</span> == day) &#123;</span><br><span class="line">                                <span class="built_in">printf</span>(<span class="string">&quot;星期六&quot;</span>);</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="number">7</span> == day) &#123;</span><br><span class="line">                                    <span class="built_in">printf</span>(<span class="string">&quot;星期日&quot;</span>);</span><br><span class="line">                                &#125; <span class="keyword">else</span></span><br><span class="line">                                &#123;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用switch语句简化上面的代码</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> day = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;day);</span><br><span class="line">    <span class="keyword">switch</span> (day)<span class="comment">//switch后的括号里的类型必须是整型</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//case后面必须是整型常量表达式</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期一\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//跳出分支，和case搭配使用</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期二\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期三\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期四\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期五\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期六\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期日\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>switch</code>后的括号里的类型必须是<strong>整型</strong>。<br><code>case</code>后面必须是<strong>整型常量表达式</strong>。<br><code>break</code>是跳出分支的意思，和<code>case</code>搭配使用。</p>
<h3 id="break把语句列表划分为不同的部分"><a href="#break把语句列表划分为不同的部分" class="headerlink" title="break把语句列表划分为不同的部分"></a>break把语句列表划分为不同的部分</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> day = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;day);</span><br><span class="line">        <span class="keyword">switch</span> (day) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;工作日\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;休息日\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输入1-5输出工作日，6-7输出休息日。<br>良好的代码风格是把最后一个语句后也加上break。</p>
<h3 id="default子句"><a href="#default子句" class="headerlink" title="default子句"></a>default子句</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">switch</span> (day) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;工作日\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;休息日\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="comment">//如果输入的不是1-7，进入default</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;输入错误\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">                <span class="comment">//良好的代码风格是每个switch语句中都加上default子句和break</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>default子句的是输入非法语句时执行的内容。<br>良好的代码风格是每个switch语句中都加上default子句和break。</p>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环之if语句</title>
    <url>/posts/9ae69c44.html</url>
    <content><![CDATA[<p>C语言是一门 结构化 的程序设计语言<br>C语言分为三种结构</p>
<ul>
<li>1、顺序结构</li>
<li>2、选择结构</li>
<li>3、循环结构<span id="more"></span></li>
</ul>
<p>分支和循环语句：<br>分支语句（选择结构） <code>if</code>、<code>switch</code><br>循环语句 <code>while</code>、<code>for</code>、<code>do while</code></p>
<p>什么是语句？<br>-由分号<code>;</code>隔开的就是一个语句</p>
<h3 id="单分支的if语句"><a href="#单分支的if语句" class="headerlink" title="单分支的if语句"></a>单分支的if语句</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> age = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">if</span> (age &lt; <span class="number">18</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未成年\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="双分支的if语句"><a href="#双分支的if语句" class="headerlink" title="双分支的if语句"></a>双分支的if语句</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> age = <span class="number">12</span>;</span><br><span class="line">    <span class="keyword">if</span> (age &lt; <span class="number">18</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未成年\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;成年\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="多分支if语句"><a href="#多分支if语句" class="headerlink" title="多分支if语句"></a>多分支if语句</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> age = <span class="number">56</span>;</span><br><span class="line">    <span class="keyword">if</span> (age &lt; <span class="number">18</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未成年\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (age &gt;= <span class="number">18</span> &amp;&amp; age &lt; <span class="number">28</span>)<span class="comment">//&amp;&amp; 逻辑与，不可以使用18 &lt;= age &lt; 28表示</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;青年\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (age &gt;= <span class="number">28</span> &amp;&amp; age &lt; <span class="number">50</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;壮年\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (age &gt;= <span class="number">50</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;老年\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>&amp;&amp;</code> 逻辑与，不可以使用18 &lt;&#x3D; age &lt; 28表示。</p>
<p>C语言中如何表示真假？<br>-0表示假，非0就是真</p>
<h3 id="使用代码块的if语句"><a href="#使用代码块的if语句" class="headerlink" title="使用代码块的if语句"></a>使用代码块的if语句</h3><p>如果条件成立，要执行多条语句，要使用代码块{}</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> age = <span class="number">12</span>;</span><br><span class="line">    <span class="keyword">if</span> (age &lt; <span class="number">18</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未成年\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;小于18岁\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (age &gt;= <span class="number">18</span> &amp;&amp; age &lt; <span class="number">28</span>)<span class="comment">//&amp;&amp; 逻辑与，不可以使用18 &lt;= age &lt; 28表示</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;青年\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (age &gt;= <span class="number">28</span> &amp;&amp; age &lt; <span class="number">50</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;壮年\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (age &gt;= <span class="number">50</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;老年\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>一对<code>&#123; &#125;</code>就是一个代码块。</p>
<p>要点：if和else组对是<strong>就近原则</strong>的。</p>
<h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><p>示例一：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">if</span> (condition) &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>条件成立，返回x，否则返回y。</p>
<p>示例二：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (condition)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>条件成立，返回x，否则返回y</p>
<p>示例三：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (num = <span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;呵呵\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印的结果是呵呵，因为<code>num = 5</code>是赋值，<code>num == 5</code>才是判断，想要判断相等时，可以 <code>5 == num</code>，这样可以避免错误。
   </p>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环之if和while示例</title>
    <url>/posts/c99fc782.html</url>
    <content><![CDATA[<h3 id="if判断一个数是否为奇数"><a href="#if判断一个数是否为奇数" class="headerlink" title="if判断一个数是否为奇数"></a>if判断一个数是否为奇数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个数：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">    b = a % <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d是奇数\n&quot;</span>,a);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d是偶数\n34&quot;</span>,a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="while和if输出1到100之间的奇数"><a href="#while和if输出1到100之间的奇数" class="headerlink" title="while和if输出1到100之间的奇数"></a>while和if输出1到100之间的奇数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//输出1-100之间的奇数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (a &lt;= <span class="number">100</span>) </span><br><span class="line">    &#123;</span><br><span class="line">            <span class="keyword">if</span> (a % <span class="number">2</span> == <span class="number">1</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d是奇数\n&quot;</span>,a);</span><br><span class="line">                a = a + <span class="number">1</span>;</span><br><span class="line">            &#125; </span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                a = a + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环练习-二分法-在有序数组中找到一个数</title>
    <url>/posts/b9ca79e6.html</url>
    <content><![CDATA[<p>在一个有序数组中查找某个具体数字n</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="type">int</span> k = <span class="number">7</span>;</span><br><span class="line">    <span class="comment">//写代码，在数组中找到7</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);<span class="comment">//算出数组中元素个数</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;sz; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (k == arr[i]) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;找到了，下标是:%d\n&quot;</span>,i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i == sz) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;找不到&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h3 id="使用二分法-在有序数组中找到一个数"><a href="#使用二分法-在有序数组中找到一个数" class="headerlink" title="使用二分法-在有序数组中找到一个数"></a>使用二分法-在有序数组中找到一个数</h3><p>使用二分法-查找效率高</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="type">int</span> k = <span class="number">11</span>; <span class="comment">//要查找的数字</span></span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);<span class="comment">//算出数组中元素个数</span></span><br><span class="line">    <span class="type">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> right = sz - <span class="number">1</span>;<span class="comment">//右下标，就是元素个数减1</span></span><br><span class="line">    <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">        <span class="type">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (arr[mid] &gt; k) &#123;</span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(arr [mid] &lt; k)</span><br><span class="line">        &#123;</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;找到了，下标是:%d\n&quot;</span>,mid);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (left &gt; right) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;没找到&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环练习-字符从两端向中间移动</title>
    <url>/posts/509865fe.html</url>
    <content><![CDATA[<p>想要达到的效果<br> ABCDEFGHIJKLMN<br> ##############<br> A############N<br> AB##########MN<br>…</p>
<span id="more"></span>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="type">int</span>** <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> arr1[] = <span class="string">&quot;ABCDEFGHIJKLMN&quot;</span>;</span><br><span class="line">    <span class="type">char</span> arr2[] = <span class="string">&quot;##############&quot;</span>;</span><br><span class="line">    <span class="type">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//int right = (sizeof(arr1)/sizeof(arr1[0]))-2;//这里不能减1，要减2，因为这个数组最后一个是\n，不是N</span></span><br><span class="line">    <span class="type">int</span> right = <span class="built_in">strlen</span>(arr1) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">        arr2[left] = arr1[left];</span><br><span class="line">        arr2[right] = arr1[right];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,arr2);</span><br><span class="line">        <span class="comment">//每打印一次休息一秒</span></span><br><span class="line">        sleep(<span class="number">1</span>);</span><br><span class="line">        left++;</span><br><span class="line">        right--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环之while语句</title>
    <url>/posts/8996f118.html</url>
    <content><![CDATA[<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>这段代码的意思是一直打印hehe。<br><img src="/posts/8996f118/img1.png" alt="while语句图解"></p>
<h4 id="使用while语句打印1-10"><a href="#使用while语句打印1-10" class="headerlink" title="使用while语句打印1-10"></a>使用while语句打印1-10</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        i = i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="break函数"><a href="#break函数" class="headerlink" title="break函数"></a>break函数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//在屏幕上打印1-10,在i == 5时跳出循环，break</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">5</span>)</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//在循环中遇到break，就停止后期的所有循环，直接终止循环，所以：while中的break是用于永久终止循环的。</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        i = i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在循环中遇到break，就停止后期的所有循环，直接终止循环，所以：while中的break是用于永久终止循环的。<br>在屏幕上打印1-10,在i &#x3D;&#x3D; 5时跳出循环，break。</p>
<h3 id="continue函数"><a href="#continue函数" class="headerlink" title="continue函数"></a>continue函数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//在屏幕上打印1-10,打印到4，i=5时死循环了</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;=<span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">5</span>)</span><br><span class="line">           <span class="keyword">continue</span>;<span class="comment">//continue跳出本次循环。continue是用于终止本次循环的，也就是本次循环中的continue后边的代码不会再执行，而是直接跳转到while语句的判断部分进行下一次循环的入口判断。</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        i = i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>continue跳出本次循环。continue是用于终止本次循环的，也就是本次循环中的continue后边的代码不会再执行，而是直接跳转到while语句的判断部分进行下一次循环的入口判断。</p>
<h3 id="getchar函数和putchar函数"><a href="#getchar函数和putchar函数" class="headerlink" title="getchar函数和putchar函数"></a>getchar函数和putchar函数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//getchar</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ch = getchar();<span class="comment">//输入一个字符</span></span><br><span class="line">    <span class="built_in">putchar</span>(ch);<span class="comment">//打印ch字符</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,ch);<span class="comment">//和putchar效果是一样的。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环练习-模拟登陆界面</title>
    <url>/posts/1c3ae651.html</url>
    <content><![CDATA[<p>模拟用户登录情景，并且只能登录3次，只允许输入三次密码，密码正确，则提示登录成功，三次均错误，则退出程序。</p>
<span id="more"></span>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="type">int</span> c = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">123456</span>;</span><br><span class="line">    <span class="keyword">while</span> (c &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入密码:-&gt;&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">        <span class="keyword">if</span> (a == b) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            c++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (c &gt; <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;三次密码均错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>初识C语言（三）</title>
    <url>/posts/d3c4a0cd.html</url>
    <content><![CDATA[<h3 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h3><h4 id="操作符之sizeof"><a href="#操作符之sizeof" class="headerlink" title="操作符之sizeof"></a>操作符之sizeof</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(a));<span class="comment">//整型变量占内存4个字节</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span> a);<span class="comment">//和上面的结果是一样的。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">int</span>));<span class="comment">//整型变量占内存4个字节</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(arr));<span class="comment">//计算数组的大小，单位是字节，4*6=24</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]));<span class="comment">//想要知道数组元素个数，可以把数组占用字节大小/数组每个元素占的字节</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p><code>sizeof(arr)/sizeof(arr[0])</code>想要知道数组元素个数，可以把数组占用字节大小&#x2F;数组每个元素占的字节。</p>
<h4 id="操作符之前置后置-、"><a href="#操作符之前置后置-、" class="headerlink" title="操作符之前置后置++、--"></a>操作符之前置后置++、--</h4><h5 id="后置"><a href="#后置" class="headerlink" title="后置++"></a>后置++</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = a++;<span class="comment">//后置++，先使用a的值，然后a再自增</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d , b = %d&quot;</span>,a,b);<span class="comment">//a = 11 , b = 10</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>后置++，先使用a的值，然后a再自增。</p>
<h5 id="前置"><a href="#前置" class="headerlink" title="前置++"></a>前置++</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = ++a;<span class="comment">//前置++，先++，再使用，即a先自增，变成11，再把a的值赋给b</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d , b = %d&quot;</span>,a,b);<span class="comment">//a = 11 , b = 11</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>前置++，先++，再使用，即a先自增，变成11，再把a的值赋给b。</p>
<h5 id="后置-1"><a href="#后置-1" class="headerlink" title="后置--"></a>后置--</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = a--;<span class="comment">//后置--，先使用a的值，然后a再自减</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d , b = %d&quot;</span>,a,b);<span class="comment">//a = 9 , b = 10</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>后置--，先使用a的值，然后a再自减</p>
<h5 id="前置-1"><a href="#前置-1" class="headerlink" title="前置--"></a>前置--</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = --a;<span class="comment">//前置--，a先--，再使用</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d , b = %d&quot;</span>,a,b);<span class="comment">//a = 9 , b = 9</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>前置--，a先--，再使用</p>
<h4 id="操作符之按位取反～"><a href="#操作符之按位取反～" class="headerlink" title="操作符之按位取反～"></a>操作符之按位取反～</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//4个字节，32个比特位</span></span><br><span class="line">    <span class="comment">//0的二进制序列:00000000 00000000 00000000 00000000</span></span><br><span class="line">    <span class="type">int</span> b = ~a;<span class="comment">//b是有符号的整型，最高位表示的是符号位</span></span><br><span class="line">    <span class="comment">//取反后的二进制序列:1（符号位，1代表负数）1111111 11111111 11111111 11111111</span></span><br><span class="line">    <span class="comment">//~是按位取反的意思，位是二进制位。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,b);<span class="comment">//使用时，打印的是二进制的原码</span></span><br><span class="line">    <span class="comment">//打印的结果是-1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>原码、反码、补码：负数在内存中存储的时候，存储的是二进制的补码</p>
<h4 id="操作符之-类型-强制类型转换"><a href="#操作符之-类型-强制类型转换" class="headerlink" title="操作符之(类型)强制类型转换"></a>操作符之(类型)强制类型转换</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = (<span class="type">int</span>)<span class="number">3.14</span>;<span class="comment">//原先3.14是double类型，想转换成int型</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>原先3.14是double类型，想转换成int型，打印的结果是3。<br>不建议在代码中使用</p>
<h4 id="算数操作符"><a href="#算数操作符" class="headerlink" title="算数操作符"></a>算数操作符</h4><p>算数操作符包括+、-、*、&#x2F;、%(求余数)</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">5</span>/<span class="number">2</span>;<span class="comment">//结果是2。</span></span><br><span class="line">    <span class="type">int</span> b = <span class="number">5</span>%<span class="number">2</span>;<span class="comment">//结果是1。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="移位操作符"><a href="#移位操作符" class="headerlink" title="移位操作符"></a>移位操作符</h4><p>移位操作符（移的是2进制位）  &gt;&gt;右移操作符、&lt;&lt;左移操作符</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//整型a占4个字节，32位，十进制是1，用2进制表示也就是 00000000 00000000 00000000 00000001</span></span><br><span class="line">    <span class="type">int</span> b = a&lt;&lt;<span class="number">1</span>;</span><br><span class="line">    <span class="comment">//整型b是整型a左移1个字节的结果，也就是00000000 00000000 00000000 00000010，用十进制表示就是2</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);<span class="comment">//对a进行左移操作，a本身不变化。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="位操作符"><a href="#位操作符" class="headerlink" title="位操作符"></a>位操作符</h4><p>位操作符，操作的是2进制位。 &amp;（按位与） ^（按位异或） |（按位或）</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">3</span>;<span class="comment">//a的二进制 0011</span></span><br><span class="line">    <span class="type">int</span> b = <span class="number">5</span>;<span class="comment">//b的二进制 0101</span></span><br><span class="line">    <span class="type">int</span> c = a&amp;b;</span><br><span class="line">    <span class="comment">//a和b按位与就是 0001，按位与也就是并且的意思，只有两个都是1，结果才是1，其余都是0。</span></span><br><span class="line">    <span class="type">int</span> d = a|b;</span><br><span class="line">    <span class="comment">//a和b按位或就是 0111,按位或就是有一个1结果就是1。</span></span><br><span class="line">    <span class="type">int</span> e = a^b;</span><br><span class="line">    <span class="comment">//a和b按位异或就是0110,按位异或就是：有1则1，全1则0。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,e);    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="赋值和判断"><a href="#赋值和判断" class="headerlink" title="赋值和判断"></a>赋值和判断</h4><p>赋值和判断：一个等号是赋值，两个等号是判断相等。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    a = <span class="number">20</span>;<span class="comment">//赋值，两个==是判断相等</span></span><br><span class="line">    a = a + <span class="number">10</span>;<span class="comment">//也是赋值</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="单目操作符、双目操作符、三目操作符"><a href="#单目操作符、双目操作符、三目操作符" class="headerlink" title="单目操作符、双目操作符、三目操作符"></a>单目操作符、双目操作符、三目操作符</h4><p>&gt;<br>&gt;&#x3D;<br>&lt;<br>&lt;&#x3D;<br> !&#x3D; 用于测试不相等<br> &#x3D;&#x3D; 用于测试 相等</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> c = a + b;<span class="comment">//加号就是操作符，是双目操作符，就是左右有两个操作数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="逻辑与操作符-amp-amp"><a href="#逻辑与操作符-amp-amp" class="headerlink" title="逻辑与操作符&amp;&amp;"></a>逻辑与操作符&amp;&amp;</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> c = a &amp;&amp; b;<span class="comment">//a和b都不是0，所以都是真</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,c);<span class="comment">//a和b逻辑与的结果是1，因为逻辑与-全真则真，有假全假</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>a和b逻辑与的结果是1，因为逻辑与-全真则真，有假全假</p>
<h4 id="逻辑或操作符"><a href="#逻辑或操作符" class="headerlink" title="逻辑或操作符||"></a>逻辑或操作符||</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> c = a || b;<span class="comment">//a是假，b是真</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,c);<span class="comment">//逻辑或操作符，有一个是真，结果就是真</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>逻辑或操作符，有一个是真，结果就是真</p>
<h4 id="条件操作符（三目操作符）"><a href="#条件操作符（三目操作符）" class="headerlink" title="条件操作符（三目操作符）"></a>条件操作符（三目操作符）</h4><p><code>exp1 ? exp2 : exp3;</code><br>exp代表表达式，上式的意思是，如果exp1的结果为真，exp2位最终结果，如果exp1的结果为假，exp3为最终结果</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> max;</span><br><span class="line"><span class="comment">//    if (a&gt;b)</span></span><br><span class="line"><span class="comment">//        max = a;</span></span><br><span class="line"><span class="comment">//    else</span></span><br><span class="line"><span class="comment">//        max = b;</span></span><br><span class="line">    max = ( a &gt; b ? a : b );<span class="comment">//这个表达式和上面的if是一样的</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,max);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="常用关键字"><a href="#常用关键字" class="headerlink" title="常用关键字"></a>常用关键字</h3><h4 id="break"><a href="#break" class="headerlink" title="break"></a>break</h4><p>break-用于停止循环</p>
<h4 id="typedef-类型定义-类型重新定义"><a href="#typedef-类型定义-类型重新定义" class="headerlink" title="typedef-类型定义-类型重新定义"></a>typedef-类型定义-类型重新定义</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> num1 = <span class="number">20</span>;<span class="comment">//定义一个无符号呢整型num1</span></span><br><span class="line">    <span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">int</span> u_int;<span class="comment">//把unsigned int重定义成了u_int，就是别名</span></span><br><span class="line">    u_int num2 = <span class="number">20</span>;<span class="comment">//num1和num2两个变量的类型是一样的</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>typedef unsigned int u_int;</code>把<code>unsigned int</code>重定义成了<code>u_int</code></p>
<h4 id="auto"><a href="#auto" class="headerlink" title="auto"></a>auto</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;<span class="comment">//局部变量-自动变量-在前面省略掉了auto</span></span><br><span class="line">    <span class="comment">//例如 auto int a = 10;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="static-函数"><a href="#static-函数" class="headerlink" title="static 函数"></a>static 函数</h4><p>static修饰函数,改变了函数的链接属性，普通函数有外部链接属性，被修饰后就没有了。</p>
<p>static修饰全局变量，改变了变量的作用域-让静态的全局变量只能在自己所在的文件内部使用，出了源文件就无法使用了。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    a++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;<span class="number">5</span>) &#123;</span><br><span class="line">        test();</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>a是静态的局部变量，被static修饰，局部变量的生命周期延长了。<br>输出的结果是：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">a = <span class="number">2</span></span><br><span class="line">a = <span class="number">3</span></span><br><span class="line">a = <span class="number">4</span></span><br><span class="line">a = <span class="number">5</span></span><br><span class="line">a = <span class="number">6</span></span><br></pre></td></tr></table></figure>
<p>相当于<code>static int a = 1;</code>只运行了一次？</p>
<h4 id="extern-用于声明外部符号"><a href="#extern-用于声明外部符号" class="headerlink" title="extern - 用于声明外部符号"></a>extern - 用于声明外部符号</h4><p>main.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="type">int</span> g_val;<span class="comment">//声明外部符号</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;g_val = %d\n&quot;</span>,g_val);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>extern.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> g_val = <span class="number">100</span>;<span class="comment">//全局变量</span></span><br></pre></td></tr></table></figure>
<p>打印的结果是 <code>g_val = 100</code></p>
<p>extern声明外部函数<br>main.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span>,<span class="type">int</span>)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> sum = Add(a,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Add.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> z = x + y;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印的结果是<code>sum = 30</code></p>
<h3 id="define定义常量和宏"><a href="#define定义常量和宏" class="headerlink" title="define定义常量和宏"></a>define定义常量和宏</h3><p>define定义标识符常量</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 1000</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//  int a = 100;</span></span><br><span class="line">    <span class="type">int</span> a = MAX;<span class="comment">//和上面的效果一样</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>define定义宏</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//宏的定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX(X,Y) (X&gt;Y?X:Y)</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> max = MAX(a,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;max = %d\n&quot;</span>,max);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h3><p>指针变量的大小：在32位平台占4个字节，在64位平台占8个字节。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span>* p = &amp;a;<span class="comment">//取出a的地址</span></span><br><span class="line">    <span class="comment">//有一种变量是用来存放地址的，就是指针变量，类型是int*</span></span><br><span class="line">    *p = <span class="number">20</span>;<span class="comment">//*-解引用操作符，通过*p把a里面的值改成20</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,&amp;a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,p);<span class="comment">//和a的地址一样</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d\n&quot;</span>,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>有一种变量是用来存放地址的，就是指针变量。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;w&#x27;</span>;</span><br><span class="line">    <span class="type">char</span>* pc = &amp;ch;</span><br><span class="line">    *pc = <span class="string">&#x27;a&#x27;</span>;<span class="comment">//通过*pc把ch里面的值改成a</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,ch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环练习之goto语句</title>
    <url>/posts/414a488a.html</url>
    <content><![CDATA[<p>不建议使用goto语句,可能导致代码执行流程出错。<br>一般用于终止深层嵌套。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">again:</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello\n&quot;</span>);</span><br><span class="line">    <span class="keyword">goto</span> again;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello\n&quot;</span>);</span><br><span class="line">    <span class="keyword">goto</span> again;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;你好\n&quot;</span>);<span class="comment">//这句不会被执行</span></span><br><span class="line">again:</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>printf(&quot;你好\n&quot;);</code>，这句永远不会被执行，直接被goto跳过了。</p>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>初识C语言（一)</title>
    <url>/posts/d87f7e0c.html</url>
    <content><![CDATA[<h3 id="hello-world-include、printf、return"><a href="#hello-world-include、printf、return" class="headerlink" title="hello world-include、printf、return"></a>hello world-include、printf、return</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello world!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p><code>#include &lt;stdio.h&gt;</code>表示包含一个叫stdio.h的文件。<br>stdio就是standard input output的缩写。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>return 0;</code>与<code>int</code>函数呼应，<code>int main()</code>表示要求返回一个整型，而0就是这个整型。</p>
<p><code>printf(&quot;hello world!\n&quot;);</code>表示在屏幕上打印东西，函数printf，就是print function的缩写，是库函数，即C语言本身提供给我们的函数。后面的<code>\n</code>表示换行。</p>
<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;a&#x27;</span>;<span class="comment">//存到内存里</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,ch);<span class="comment">//%c-打印字符型数据</span></span><br><span class="line">    <span class="comment">//int 整型</span></span><br><span class="line">    <span class="type">int</span> age = <span class="number">20</span>;<span class="comment">//定义一个整型数据age</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,age);<span class="comment">//%d-打印整型十进制数据</span></span><br><span class="line">    <span class="comment">//long 长整型</span></span><br><span class="line">    <span class="type">long</span> num = <span class="number">100000000000</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%ld\n&quot;</span>,num);</span><br><span class="line">    <span class="type">float</span> f = <span class="number">5.0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>,f);</span><br><span class="line">    <span class="comment">//返回不同类型的字符占用内存大小。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">char</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">short</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">long</span>)); <span class="comment">//返回的字节可能是4或8</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">long</span> <span class="type">long</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">float</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">double</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>char</code>  表示字符数据类型  打印用<code>%c</code></p>
<p><code>short</code> 短整型(short int) ,2字节<br><code>int</code> 整型，4字节<br><code>long</code> 长整型，根据不同规定，8字节或4字节<br><code>long long</code> 更长的整型，8字节<br>打印上面四个用<code>%d</code></p>
<p><code>float</code> 单精度浮点数，4字节<br><code>double</code> 双精度浮点数，8字节<br>打印用<code>%f</code></p>
<p><code>%d</code>打印整型<br><code>%c</code>打印字符<br><code>%f</code>打印浮点数-打小数<br><code>%p</code>以地址的形式打印<br><code>%x</code>打印16进制数字</p>
<p><code>char ch = &#39;a&#39;;</code>表示定义一个字符型数据ch，就是a<br><code>printf(&quot;%c\n&quot;,ch);</code>%c表示打印字符型数据ch</p>
<p><code>printf(&quot;%d\n&quot;,age);</code>%d表示打印整型十进制数据age</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">age</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//年龄</span></span><br><span class="line">    <span class="comment">//20</span></span><br><span class="line">   <span class="type">short</span> age = <span class="number">20</span>; <span class="comment">//向内存申请2个字节，16bit位，用来存放20</span></span><br><span class="line">   <span class="type">float</span> weight = <span class="number">95.6</span>;<span class="comment">//向内存申请4个字节，32bit位，用来存放小数，小数必须用浮点数</span></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>小数必须用浮点数。</p>
<h3 id="两个数相加-scanf"><a href="#两个数相加-scanf" class="headerlink" title="两个数相加-scanf"></a>两个数相加-scanf</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//计算连个数的和</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//c语言语法规定，变量要定义在当前代码块的最前面</span></span><br><span class="line">    <span class="comment">//输入数据用scanf</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);<span class="comment">//&amp;符号是取地址的意思</span></span><br><span class="line">    sum = a + b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>c语言语法规定，变量要定义在当前代码块的最前面。<br><code>scanf(&quot;%d%d&quot;,&amp;a,&amp;b);</code><br>输入数据用<code>scanf</code>，<code>&amp;</code>符号是取地址的意思。<br>这句话表述输入两个整型变量a和b。</p>
<h3 id="变量、常量、全局变量、局部变量"><a href="#变量、常量、全局变量、局部变量" class="headerlink" title="变量、常量、全局变量、局部变量"></a>变量、常量、全局变量、局部变量</h3><p>不变的量就是常量，变的量就是变量。<br>变量分为局部变量和全局变量，局部变量和全局变量名字建议不要相同，相同局部优先。局部变量只能在大括号内部使用。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> num1 = <span class="number">10</span>;<span class="comment">//num1是全局变量-定义在代码块括号外</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//定义变量的方式</span></span><br><span class="line">    <span class="type">int</span> age = <span class="number">150</span>;</span><br><span class="line">    <span class="type">float</span> weight = <span class="number">99.9</span>;</span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;w&#x27;</span>;</span><br><span class="line"><span class="comment">//变量分为局部变量和全局变量</span></span><br><span class="line">    <span class="type">int</span> num2 = <span class="number">20</span>;<span class="comment">//num2是局部变量-定义在代码块括号内</span></span><br><span class="line">    <span class="type">int</span> num1 = <span class="number">30</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num1);<span class="comment">//局部变量和全局变量名字建议不要相同，相同局部优先。所以打印出30。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>局部变量和全局变量名字建议不要相同，相同局部优先。所以打印出30。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);<span class="comment">//不会打印出10，因为局部变量只能在大括号内部使用</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>初识C语言（二）</title>
    <url>/posts/9eda039f.html</url>
    <content><![CDATA[<h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>字符串，由双引号引起来的一串字符，称为字符串字面值，或者简称字符串。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="string">&quot;abcdef&quot;</span>;</span><br><span class="line">    <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    <span class="string">&quot;&quot;</span>;<span class="comment">//空字符串</span></span><br><span class="line">    <span class="comment">//上面三个都是字符串。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p><code>&quot;&quot;;</code>代表空字符串</p>
<p>字符串的结束标志是一个<code>\0</code>的转义字符。在计算字符串长度的时候<code>\0</code>是结束标志，不算做字符串的内容。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> arr1[] = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">    <span class="type">char</span> arr2[] = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">strlen</span>(arr1));<span class="comment">//strlen-string length-用于计算字符串长度</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">strlen</span>(arr2));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出结果是3和随机值</span></span><br></pre></td></tr></table></figure>
<p><code>strlen</code>就是string length的缩写，用于计算字符串长度。</p>
<p>arr1这个数列包括的内容就是<code>a</code>,<code>b</code>,<code>c</code>,<code>\0</code>，计算长度时，最后一个不计算，所以是字符串长度就是3。<br>arr2这个数列包括<code>a</code>,<code>b</code>,<code>c</code>，最后不是<code>\0</code>结尾。在计算长度时，一直找到<code>\0</code>为止，长度不确定是多少。</p>
<h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><p>转义字符-把原来的意思转变了。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;abc\n&quot;</span>);<span class="comment">//把\n的意思转变了，变成了换行。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>printf(&quot;abc\n&quot;);</code>这里转义字符<code>\n</code>就是把n的意思变成了换行。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c:\test\32\test.c&quot;</span>);</span><br><span class="line">    <span class="comment">//无法正常打印，因为\t是水平制表符，想要显示一个反斜杠，要输入\\，两个反斜杠</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c:\\test\\32\\test.c&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的例子看出，想要显示一个反斜杠，需要输入两个反斜杠就可以正常显示。</p>
<h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><p>C语言实现循环的方式：while、for、do…while等</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(a&lt;<span class="number">20000</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>,a);</span><br><span class="line">        a = a + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a&gt;=<span class="number">20000</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;a&gt;=20000\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>while(a&lt;20000)&#123;……&#125;</code>的意思就是当a小于20000时，一直执行括号里的内容，直到a不再小于20000。</p>
<h3 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h3><p>自定义函数,就是自己设计的函数，可以简化代码，复用代码。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//两数相加</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>&#123;</span><br><span class="line">    <span class="type">int</span> z = x + y;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num1 = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> num2 = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> sum1 = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sum2 = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">200</span>;</span><br><span class="line">    sum1 = Add(num1,num2);</span><br><span class="line">    sum2 = Add(a,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum1 = %d\n&quot;</span>,sum1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum2 = %d\n&quot;</span>,sum2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="选择语句-if"><a href="#选择语句-if" class="headerlink" title="选择语句 if"></a>选择语句 if</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> input = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入1或0:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;input);</span><br><span class="line">    <span class="keyword">if</span> (input == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入的数是1\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入的数是0\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>数据就是一组相同类型元素的集合，数组的下标从0开始，依次递增1。<br><code>int arr[10];</code>   定义一个存放10个整数数字的数组。<br><code>char ch[20];</code>    定义一个存放20个字符的数组。<br><code>float fl[20];</code>   定义一个存放20个浮点数的数组。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;<span class="comment">//定义一个数组，最多放10个元素</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;<span class="number">10</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d,&quot;</span>,arr[i]);</span><br><span class="line">        i = i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的代码的功能是打印出arr这个数组的每个元素的内容。</p>
<h3 id="常属性"><a href="#常属性" class="headerlink" title="常属性"></a>常属性</h3><p>const - 常属性，不能再更改数值</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> num = <span class="number">4</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);</span><br><span class="line">    num = <span class="number">8</span>;<span class="comment">//num不会等于8，因为num是常属性。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> n = <span class="number">10</span>;<span class="comment">//n是变量，但是有常属性，所以我们说n是常变量，本质上是变量，使用常量时，不能用n。</span></span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;<span class="comment">//arr里面不能写n，因为这里要写常量，n是变量。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>const int n = 10;</code> n是变量，但是有常属性，所以我们说n是常变量，本质上是变量，使用常量时，不能用n。</p>
<h3 id="标识符常量"><a href="#标识符常量" class="headerlink" title="标识符常量"></a>标识符常量</h3><p><code>#define</code>定义 标识符常量，例如<code>#define MAX 10</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 10</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">define</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[MAX] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,MAX);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="枚举常量"><a href="#枚举常量" class="headerlink" title="枚举常量"></a>枚举常量</h3><p>枚举，一一列举，比如性别，三原色、星期几等。<br>枚举关键字：<code>enum</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Sex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    MALE,</span><br><span class="line">    FEMALE,</span><br><span class="line">    SECRET</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//上面的三个就是枚举常量</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">Sex</span> <span class="title">s</span> =</span> FEMALE;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,MALE);<span class="comment">//0</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,FEMALE);<span class="comment">//1</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,SECRET);<span class="comment">//2</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>初识指针</title>
    <url>/posts/89734f24.html</url>
    <content><![CDATA[<h3 id="指针是什么？"><a href="#指针是什么？" class="headerlink" title="指针是什么？"></a>指针是什么？</h3><p>指针就是一个变量，变量里存着地址，就是通过它可以找到对应的内存单元。<br>也就是说：指针就是地址，地址就是指针。</p>
<span id="more"></span>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span>* p = &amp;a;<span class="comment">//指针变量</span></span><br></pre></td></tr></table></figure>
<p><code>int* p = &amp;a;</code>这里我们对变量a，取出它的地址，可以使用&amp;操作符。<br>将a的地址存在变量p中，p就是一个指针变量。<br>存放在指针中的值都被当成地址处理。</p>
<p>指针类型决定了进行解引用操作时能访问的空间大小<br><code>int* p</code>能访问4字节<br><code>char* p</code>能访问1字节<br><code>double* p</code>能访问8字节<br>指针类型要根据需要，选择合适的。</p>
<hr>
<h3 id="指针-整数"><a href="#指针-整数" class="headerlink" title="指针+-整数"></a>指针+-整数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0x11223344</span>;</span><br><span class="line">    <span class="type">int</span>* pa = &amp;a;</span><br><span class="line">    <span class="type">char</span>* pc = &amp;a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,pa);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,pa+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,pc);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,pc+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印的结果是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0x16fdff2a8</span><br><span class="line">0x16fdff2ac</span><br><span class="line">0x16fdff2a8</span><br><span class="line">0x16fdff2a9</span><br></pre></td></tr></table></figure>
<p>pa是整型，加1跳过4个字节。<br>pc是字符型，加1跳过1个字节。<br>指针类型决定了：指针走一步走多远（指针的步长），单位是字节</p>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span>* p = arr;<span class="comment">//数组名-首元素地址,创建的指针变量p，存放了数组中第一个元素地址。</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">        *(p+i) = <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="comment">//把数组中每个元素都改成了1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="野指针"><a href="#野指针" class="headerlink" title="野指针"></a>野指针</h3><p>野指针就是指指针指向的位置是不可知的（随机的、不正确的、没有明确限制的）</p>
<h4 id="野指针原因"><a href="#野指针原因" class="headerlink" title="野指针原因"></a>野指针原因</h4><p>1、指针未初始化</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    <span class="type">int</span> a;<span class="comment">//局部变量不初始化，默认是随机值。</span></span><br><span class="line">    <span class="type">int</span>* p;<span class="comment">//局部的指针变量，就被初始化随机值。</span></span><br><span class="line">    *p = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2、指针越界访问</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> *p = arr;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">12</span>; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        p++;<span class="comment">//越出了数组范围</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>3、指针指向的空间释放了</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>* <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">return</span> &amp;a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> *p = test();</span><br><span class="line">	*p = <span class="number">20</span>;<span class="comment">//地址指向的空间已经释放了。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如何避免野指针？</p>
<ul>
<li>指针要初始化</li>
<li>小心指针越界</li>
<li>指针指向空间释放即使置NULL-不知道给什么值就给NULL</li>
<li>指针使用之前检查有效性</li>
</ul>
<hr>
<h3 id="指针运算"><a href="#指针运算" class="headerlink" title="指针运算"></a>指针运算</h3><ul>
<li>指针+-整数</li>
<li>指针-指针</li>
<li>指针的关系运算<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">int</span>* p = arr;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;sz; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,*p);</span><br><span class="line">        p = p + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,&amp;arr[<span class="number">9</span>] - &amp;arr[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure>
<p>打印的结果是9。由此知，指针-指针，得到的结果是中间元素的个数。<br>警告⚠️：不可以让两个不同的指针相减。</p>
<p>模拟实现strlen效果：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">my_strlen</span><span class="params">(<span class="type">char</span>* str)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span>* start = str;</span><br><span class="line">    <span class="type">char</span>* end = str;</span><br><span class="line">    <span class="keyword">while</span> (*end != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">        end++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> end - start;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> arr[] = <span class="string">&quot;bit&quot;</span>;</span><br><span class="line">    <span class="type">int</span> len = my_strlen(arr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,len);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> N_VALUES 5</span></span><br><span class="line"><span class="type">float</span> values[N_VALUES];</span><br><span class="line"><span class="type">float</span> *vp;</span><br><span class="line"><span class="keyword">for</span>(vp = &amp;values[N_VALUES]; vp&gt;&amp;values[<span class="number">0</span>] ; )</span><br><span class="line">&#123;</span><br><span class="line">	*--vp = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>允许指向数组元素的指针与指向数组最后一个元素后面的那个内存位置的指针进行比较，但是不允许与指向第一个元素之前的那个内存位置的指针进行比较。</p>
<hr>
<h3 id="指针和数组"><a href="#指针和数组" class="headerlink" title="指针和数组"></a>指针和数组</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,arr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,&amp;arr[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure>
<p>打印的结果是一致的，可以认为arr就是数组首元素的地址。即arr和&amp;arr[0]是一致的。<br>但是有2个例外：</p>
<ul>
<li>&amp;arr - &amp;数组名 - 不是首元素地址- 数组名表示整个数组 - 取出的是整个数组的地址。（但是打印出来的结果还是首元素地址）</li>
<li>sizeof内部 - sizeof(arr) - sizeof(数组名) - 表示整个数组的大小。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,arr+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,&amp;arr[<span class="number">0</span>]+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,&amp;arr+<span class="number">1</span>);</span><br></pre></td></tr></table></figure>
<p>打印的结果是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0x16fdff284</span><br><span class="line">0x16fdff284</span><br><span class="line">0x16fdff2a8</span><br></pre></td></tr></table></figure>
<p>上面的结果可知，&amp;arr取出的是整个数组的地址。</p>
<h4 id="数组可以通过指针访问"><a href="#数组可以通过指针访问" class="headerlink" title="数组可以通过指针访问"></a>数组可以通过指针访问</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span>* p = arr;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span>* p = arr;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>;i&lt;<span class="number">10</span>; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%p  =====  %p\n&quot;</span>,p+i,&amp;arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印的结果是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0x16fdff280  =====  0x16fdff280</span><br><span class="line">0x16fdff284  =====  0x16fdff284</span><br><span class="line">0x16fdff288  =====  0x16fdff288</span><br><span class="line">0x16fdff28c  =====  0x16fdff28c</span><br><span class="line">0x16fdff290  =====  0x16fdff290</span><br><span class="line">0x16fdff294  =====  0x16fdff294</span><br><span class="line">0x16fdff298  =====  0x16fdff298</span><br><span class="line">0x16fdff29c  =====  0x16fdff29c</span><br><span class="line">0x16fdff2a0  =====  0x16fdff2a0</span><br><span class="line">0x16fdff2a4  =====  0x16fdff2a4</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span>* p = arr;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>;i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">        *(p+i) = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>;i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="二级指针"><a href="#二级指针" class="headerlink" title="二级指针"></a>二级指针</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span>* pa = &amp;a;<span class="comment">//pa就是一级指针变量，int*就是一级指针类型</span></span><br><span class="line">    <span class="type">int</span>** ppa = &amp;pa;<span class="comment">//ppa就是二级指针变量，int**就是二级指针类型</span></span><br><span class="line">    <span class="type">int</span>*** pppa = &amp;ppa; <span class="comment">//三级指针</span></span><br><span class="line">    <span class="keyword">return</span>** <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>int** ppa = &amp;pa;</code> ppa就是二级指针变量，int**就是二级指针类型<br>int**中后面的*代表是个指针变量，指向int*这个指针</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span>* pa = &amp;a;<span class="comment">//pa就是一级指针变量，int*就是一级指针类型</span></span><br><span class="line">    <span class="type">int</span>** ppa = &amp;pa;<span class="comment">//ppa就是二级指针变量，int**就是二级指针类型</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,**ppa);</span><br><span class="line">    **ppa = <span class="number">20</span>;<span class="comment">//通过二级指针修改a的值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,**ppa);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印的结果是10和20</p>
<hr>
<h3 id="指针数组"><a href="#指针数组" class="headerlink" title="指针数组"></a>指针数组</h3><ul>
<li><p>指针数组 本质是数组 - 存放指针的数组</p>
</li>
<li><p>数组指针 本质是指针</p>
</li>
<li><p>整型数组 - 存放整型</p>
</li>
<li><p>字符数组 - 存放字符</p>
</li>
<li><p>指针数组 - 存放指针</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> c = <span class="number">30</span>;</span><br><span class="line"><span class="comment">//    int* pa = &amp;a;</span></span><br><span class="line"><span class="comment">//    int* pb = &amp;b;</span></span><br><span class="line"><span class="comment">//    int* pc = &amp;c;</span></span><br><span class="line">    <span class="type">int</span>* arr[<span class="number">3</span>]  = &#123;&amp;a,&amp;b,&amp;c&#125;;<span class="comment">//指针数组</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;<span class="number">3</span>; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,*(arr[i]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印的结果是10 20 30</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>原码、反码、补码</title>
    <url>/posts/fb35e44.html</url>
    <content><![CDATA[<p>只要是整数，在内存中存储的都是二进制的补码。<br>正数——原码、反码、补码都相同。</p>
<span id="more"></span>

<p>对于负数：<br>例如-2，的计算过程。</p>
<table>
<thead>
<tr>
<th>原码</th>
<th>–&gt;反码</th>
<th>–&gt;补码</th>
</tr>
</thead>
<tbody><tr>
<td>直接按照正负，写出二进制序列</td>
<td>原码符号位不变，其他位按位取反</td>
<td>反码+1</td>
</tr>
<tr>
<td>10000000 00000000 00000000 00000010</td>
<td>11111111 11111111 11111111 11111101</td>
<td>11111111 11111111 11111111 11111110</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>数组</title>
    <url>/posts/340249a9.html</url>
    <content><![CDATA[<p>数组是一组相同类型元素的集合。<br><code>type_t arr_name [const_n]</code><br>type_t 指的就是数组的元素类型。<br>const_n 是一个常量表达式，用来指定数组的大小。</p>
<span id="more"></span>

<hr>
<p><code>int arr[10];</code><br>创建一个数组，存放整型变量，10个<br><code>char arr2[5];</code><br>创建一个数组-存放字符-5个</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> n = <span class="number">5</span>;</span><br><span class="line"><span class="type">char</span> ch[n];</span><br></pre></td></tr></table></figure>
<p>上面的方式是不行的，方括号内必须是常量表达式，不能是变量。<br><code>float arr4[1];</code><br>创建一个数组，存放float型数据，1个<br><code>double arr5[3];</code><br>创建double型数组，存放3个数据</p>
<hr>
<h3 id="数组的初始化"><a href="#数组的初始化" class="headerlink" title="数组的初始化"></a>数组的初始化</h3><p><code>int arr[10] = &#123;1,2,3&#125;;</code><br>上面是一个<strong>不完全初始化</strong>，只有前三个是1，2，3，剩下的元素默认是0。<br><code>char arr2[5] = &#123;&#39;a&#39;,&#39;b&#39;&#125;;</code><br>上面是一个char型数组的不完全初始化，前两个分别是a,b，剩下的默认是0。<br><code>char arr2[5] = “ab”;</code><br>上面是一个char型数组的不完全初始化，前三个分别是a,b,\0，剩下的默认是0。<br><code>char arr2[] = “abcdef”;</code><br>上面的数组根据初始化内容确定数组大小，大小是7，分别是abcdef和\0。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> arr[] = <span class="string">&quot;abcdef&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,<span class="keyword">sizeof</span>(arr));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">strlen</span>(arr));</span><br></pre></td></tr></table></figure>
<p>打印的结果是7 6，sizeof计算\0，strlen不计算\0。<br>1、strlen和sizeof没有什么关联。<br>2、strlen只能求字符串长度。<br>3、sizeof是计算变量、数组、类型的大小，单位是字节。<br>4、strlen是库函数，需要引用头文件，sizeof是操作符，不需要引用库文件。</p>
<p>总结：<br>数组是使用下标来访问的，下标是从0开始。<br>数组的大小可以通过计算得到。<br><code>int sz = sizeof(arr)/sizeof(arr[0]);</code></p>
<h3 id="一维数组在内存中的使用"><a href="#一维数组在内存中的使用" class="headerlink" title="一维数组在内存中的使用"></a>一维数组在内存中的使用</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;sz; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;&amp;arr[%d] = %p\n&quot;</span>,i,&amp;arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印的结果是：<br>&amp;arr[0] &#x3D; 0x16fdff1b0<br>&amp;arr[1] &#x3D; 0x16fdff1b4<br>&amp;arr[2] &#x3D; 0x16fdff1b8<br>&amp;arr[3] &#x3D; 0x16fdff1bc<br>&amp;arr[4] &#x3D; 0x16fdff1c0<br>&amp;arr[5] &#x3D; 0x16fdff1c4<br>&amp;arr[6] &#x3D; 0x16fdff1c8<br>&amp;arr[7] &#x3D; 0x16fdff1cc<br>&amp;arr[8] &#x3D; 0x16fdff1d0<br>&amp;arr[9] &#x3D; 0x16fdff1d4</p>
<p>通过上面的结果得知，数组在内存中连续存放。</p>
<hr>
<h3 id="二维数组的创建和初始化"><a href="#二维数组的创建和初始化" class="headerlink" title="二维数组的创建和初始化"></a>二维数组的创建和初始化</h3><h4 id="二维数组的创建："><a href="#二维数组的创建：" class="headerlink" title="二维数组的创建："></a>二维数组的创建：</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> arr[<span class="number">3</span>][<span class="number">4</span>];<span class="comment">//创建一个三行四列的数组</span></span><br><span class="line"><span class="type">char</span> arr[<span class="number">3</span>][<span class="number">5</span>];</span><br><span class="line"><span class="type">double</span> arr[<span class="number">2</span>][<span class="number">4</span>];</span><br></pre></td></tr></table></figure>
<h4 id="二维数组的初始化："><a href="#二维数组的初始化：" class="headerlink" title="二维数组的初始化："></a>二维数组的初始化：</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> arr[<span class="number">3</span>][<span class="number">4</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;<span class="comment">//第一行存不下就去第二行</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">3</span>][<span class="number">4</span>] = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>&#125;&#125;;<span class="comment">//第一行放1，2，3，0，第二行放4，5，0，0，第三行全是0</span></span><br></pre></td></tr></table></figure>
<p>二维数组不完全初始化，后面的值默认是0。<br><code>int arr[][] = &#123;1,2,3,4,5,6,7,8&#125;;</code><br>上面的写法是错误的，列不能省略，行可以。<br><code>int arr[3][] = &#123;&#123;1,2,3,4&#125;,&#123;5,6,7,8&#125;&#125;;</code><br>上面的写法是错误的，列不能省略，行可以。<br><code>int arr[][4] = &#123;&#123;1,2,3,4&#125;,&#123;5,6,7,8&#125;&#125;;</code><br>上面的写法是可以的，行可以省略。</p>
<h4 id="二维数组的使用："><a href="#二维数组的使用：" class="headerlink" title="二维数组的使用："></a>二维数组的使用：</h4><p>二维数组通过下标使用。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">3</span>][<span class="number">4</span>] = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>&#125;&#125;;<span class="comment">//创建一个三行四列的数组</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;<span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;<span class="number">4</span>;j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,arr[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印的结果是：<br>1 2 3 0 <br>4 5 0 0 <br>0 0 0 0</p>
<h4 id="二维数组在内存中的存储"><a href="#二维数组在内存中的存储" class="headerlink" title="二维数组在内存中的存储"></a>二维数组在内存中的存储</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">3</span>][<span class="number">4</span>] = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>&#125;&#125;;<span class="comment">//创建一个三行四列的数组</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;<span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;<span class="number">4</span>;j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;&amp;arr[%d][%d] = %p\n&quot;</span>,i,j,&amp;arr[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印的结果是：<br>&amp;arr[0][0] &#x3D; 0x16fdff278<br>&amp;arr[0][1] &#x3D; 0x16fdff27c<br>&amp;arr[0][2] &#x3D; 0x16fdff280<br>&amp;arr[0][3] &#x3D; 0x16fdff284<br>&amp;arr[1][0] &#x3D; 0x16fdff288<br>&amp;arr[1][1] &#x3D; 0x16fdff28c<br>&amp;arr[1][2] &#x3D; 0x16fdff290<br>&amp;arr[1][3] &#x3D; 0x16fdff294<br>&amp;arr[2][0] &#x3D; 0x16fdff298<br>&amp;arr[2][1] &#x3D; 0x16fdff29c<br>&amp;arr[2][2] &#x3D; 0x16fdff2a0<br>&amp;arr[2][3] &#x3D; 0x16fdff2a4</p>
<p>二维数组和一维数组一样，也是连续的。</p>
<hr>
<p>数组一是用来存储数据，二是用来传递参数。</p>
<h3 id="数组作为函数参数"><a href="#数组作为函数参数" class="headerlink" title="数组作为函数参数"></a>数组作为函数参数</h3><p>往往我们在写代码的时候，会将数组作为参数传个函数，比如：我要实现一个冒泡排序（这里要讲算法思想）函数将一个整形数组排序。</p>
<h4 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h4><p>假设一组数据：10，9，8，7，6，5，4，3，2，1（10和9比较）<br>比较一次：9，10，8，7，6，5，4，3，2，1（10和8比较）<br>比较两次：9，8，10，7，6，5，4，3，2，1<br>比较三次：9，8，7，10，6，5，4，3，2，1<br>……<br>9，8，7，6，5，4，3，2，1，10</p>
<p>上面的一趟冒泡排序让10回到了最终位置，下面可以对其他数字冒泡排序。<br>9，8，7，6，5，4，3，2，1，10<br>8，9，7，6，5，4，3，2，1，10<br>8，7，9，6，5，4，3，2，1，10<br>……<br>8，7，6，5，4，3，2，1，9，10<br>对每个数字进行冒泡排序，最终效果<br>……<br>1，2，3，4，5，6，7，8，9，10</p>
<p>10个元素进行冒泡排序，需要进行9趟（n-1趟）</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubble_sort</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> sz)</span><span class="comment">//此时数组元素个数可以不指定</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//首先确定冒泡排序趟数</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//int sz = sizeof(arr)/sizeof(arr[0]);</span></span><br><span class="line">    <span class="comment">//不可以在这里计算数组个数，在主函数里计算，因为arr数组没有完全传过来,只传了arr首元素地址。</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;sz; i++) &#123;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">1</span>;<span class="comment">//假设本次排序已经有序了</span></span><br><span class="line">        <span class="comment">//每一趟冒泡排序内容</span></span><br><span class="line">        <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; sz - <span class="number">1</span> - i ; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[j] &gt; arr[j+<span class="number">1</span>])&#123;</span><br><span class="line">                <span class="type">int</span> temp = arr[j];</span><br><span class="line">                arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">                arr[j+<span class="number">1</span>] = temp;</span><br><span class="line">                flag = <span class="number">0</span>;<span class="comment">//本次排序的数据不有序</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//跳出冒泡排序循环</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123;<span class="number">912</span>,<span class="number">813</span>,<span class="number">713</span>,<span class="number">226</span>,<span class="number">235</span>,<span class="number">4421</span>,<span class="number">313</span>,<span class="number">2131</span>,<span class="number">144</span>,<span class="number">1110</span>&#125;;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">//对arr进行排序，升序。</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    bubble_sort(arr,sz);<span class="comment">//冒泡排序函数</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;sz; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>break语句只用于for和switch循环。</p>
<hr>
<h3 id="数组名是什么？"><a href="#数组名是什么？" class="headerlink" title="数组名是什么？"></a>数组名是什么？</h3><p>——数组名是首元素地址（有2个例外）<br>1、sizeof内部单独放数组名<br>此时数组名表示整个数组，计算整个数组大小，单位是字节。<br>2、&amp;arr，取地址数组名<br>数组名代表整个数组，取出的是整个数组的地址。</p>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>初识C语言（四）</title>
    <url>/posts/64e9b9a8.html</url>
    <content><![CDATA[<h3 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;<span class="comment">//向内存申请了4个字节的空间</span></span><br><span class="line">    <span class="type">int</span>* p = &amp;a;<span class="comment">//p是一个变量-是指针变量（用来存地址的）-类型是int型</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,&amp;a);<span class="comment">//%p是用来打印地址的，&amp;a是用来取a的地址的。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,p);<span class="comment">//打印的内容和上面是一样的</span></span><br><span class="line">    *p = <span class="number">20</span>;<span class="comment">//* - 解引用操作符（间接访问操作符）</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d\n&quot;</span>,a);<span class="comment">//改变了a的值，a = 20</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> d = <span class="number">3.14</span>;</span><br><span class="line">    <span class="type">double</span>* pd = &amp;d;</span><br><span class="line">    *pd = <span class="number">5.5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>,d);<span class="comment">//结果是5.500000</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>,*pd);<span class="comment">//结果和直接打印d是一样的</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(pd));<span class="comment">//打印的结果是4或8，主要取决于平台是32位或64位</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>指针变量的大小</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">char</span>*));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">short</span>*));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">int</span>*));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">double</span>*));<span class="comment">//打印的结果都是4或8，主要取决于平台是32位或64位</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>指针变量的大小是4或8字节，主要取决于32位平台（4字节）或64位平台（8字节）</p>
<h3 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h3><p>想描述一个复杂对象，需要使用结构体，结构体就是自己创造出来的一种类型。<br>例如想创造一本书，需要书名、作者、出版社、定价等信息。<br>struct关键字-struct Book。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//创建一个结构体类型Book</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Book</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];<span class="comment">//C语言程序设计</span></span><br><span class="line">    <span class="type">short</span> price;<span class="comment">//价格是55</span></span><br><span class="line">&#125;;<span class="comment">//此分号用于结束类型定义</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//利用结构体类型-创建一个该类型的变量b1</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Book</span> <span class="title">b1</span> =</span> &#123;<span class="string">&quot;C语言程序设计&quot;</span>,<span class="number">55</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;书名：%s\n&quot;</span>,b1.name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;价格：%d元\n&quot;</span>,b1.price);<span class="comment">//打印信息</span></span><br><span class="line">    b1.price = <span class="number">15</span>;</span><br><span class="line">    <span class="built_in">strcpy</span>(b1.name,<span class="string">&quot;C++&quot;</span>); <span class="comment">//strcpy-string copy - 字符串拷贝 - 库函数string.h</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;修改后书名：%s\n&quot;</span>,b1.name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;修改后的价格：%d元\n&quot;</span>,b1.price);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结构体中想要修改数组内容，需要用到字符串拷贝函数 - strcpy。<br><code>strcpy(b1.name,&quot;C++&quot;);</code>的意思是把结构体<code>b1</code>中的<code>name</code>改成<code>C++</code>。<br>要使用strcpy，需要string.h库函数。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Book</span> <span class="title">b1</span> =</span> &#123;<span class="string">&quot;C语言程序设计&quot;</span>,<span class="number">55</span>&#125;;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Book</span>* <span class="title">pb</span> =</span> &amp;b1;</span><br><span class="line">    <span class="comment">//利用pb打印出书名和价格</span></span><br><span class="line"><span class="comment">//    printf(&quot;%s\n&quot;,(*_pb).name);</span></span><br><span class="line"><span class="comment">//    printf(&quot;%d\n&quot;,(_*pb).price);</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,pb-&gt;name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,pb-&gt;price);<span class="comment">//使用箭头-&gt;和上面的点.操作符是一样的</span></span><br><span class="line">    <span class="comment">//.  结构体变量.成员</span></span><br><span class="line">    <span class="comment">//-&gt; 结构体指针-&gt;成员</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>操作符</title>
    <url>/posts/e4552cdf.html</url>
    <content><![CDATA[<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><ul>
<li>算数操作符</li>
<li>移位操作符</li>
<li>位操作符</li>
<li>赋值操作符</li>
<li>单目操作符</li>
<li>关系操作符</li>
<li>逻辑操作符</li>
<li>条件操作符</li>
<li>逗号操作符</li>
<li>下标引用、函数调用和结构成员</li>
</ul>
<span id="more"></span>

<hr>
<h3 id="算数操作符"><a href="#算数操作符" class="headerlink" title="算数操作符"></a>算数操作符</h3><p>+、-、*、&#x2F;、%<br><code>int a = 5 / 2;</code>商2余1，a &#x3D; 2<br><code>int a = 5 % 2;</code> a &#x3D; 1<br><code>float a = 5.0 / 2;</code> a &#x3D; 2.500000<br>取模%的左右两边数字必须都是整数，例如<code>5.0 % 2</code>是不合法的。<br>除了取模%操作符之外，其他几个操作符都必须作用于整数和浮点数<br>对于&#x2F;操作符，如果两边都是整数，执行整数除法，只要两边有浮点数，就执行浮点数除法。</p>
<hr>
<h3 id="移位操作符"><a href="#移位操作符" class="headerlink" title="移位操作符"></a>移位操作符</h3><p><code>&lt;&lt;</code> 左移位操作符;<br><code>&gt;&gt;</code> 右移位操作符。<br><strong>移的是二进制位</strong>。<br>左移位操作符规则：左边抛弃，右边补0。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    <span class="type">int</span> a = <span class="number">16</span>;</span><br><span class="line">    <span class="type">int</span> b = a &gt;&gt; <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,b);</span><br></pre></td></tr></table></figure>
<p>打印的结果是4。<br>右移1位有除2的效果，左移1位有乘2的效果。<br>警告⚠️：</p>
<ul>
<li>对于移位运算符，不要移动负数位（<code>num&gt;&gt;-1</code>），这个标准是未定义的。</li>
<li>操作数必须是整数。<br>相关：<a href="https://blog.zmyu.cc/posts/d3c4a0cd.html#%E7%A7%BB%E4%BD%8D%E6%93%8D%E4%BD%9C%E7%AC%A6">移位操作符</a>、<a href="https://blog.zmyu.cc/posts/fb35e44.html">原码、补码、反码</a></li>
</ul>
<hr>
<h3 id="位操作符"><a href="#位操作符" class="headerlink" title="位操作符"></a>位操作符</h3><p>位是指二进制位，操作数必须是整数</p>
<ul>
<li>&amp; 按位与</li>
<li>| 按位或</li>
<li>^ 按位异或</li>
</ul>
<h4 id="amp-按位与"><a href="#amp-按位与" class="headerlink" title="&amp; 按位与"></a>&amp; 按位与</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    <span class="type">int</span> a = <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> c = a &amp; b;</span><br></pre></td></tr></table></figure>
<p>a的二进制位是00000000 00000000 00000000 00000011<br>b的二进制位是00000000 00000000 00000000 00000101<br>按位与的结果是00000000 00000000 00000000 00000001，有0则0，全1为1。</p>
<h4 id="按位或"><a href="#按位或" class="headerlink" title="| 按位或"></a>| 按位或</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    <span class="type">int</span> a = <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> c = a | b;</span><br></pre></td></tr></table></figure>
<p>a的二进制位是00000000 00000000 00000000 00000011<br>b的二进制位是00000000 00000000 00000000 00000101<br>按位或的结果是00000000 00000000 00000000 00000111，有1则1，全0为0。</p>
<h4 id="按位异或"><a href="#按位异或" class="headerlink" title="^ 按位异或"></a>^ 按位异或</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    <span class="type">int</span> a = <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> c = a ^ b;</span><br></pre></td></tr></table></figure>
<p>a的二进制位是00000000 00000000 00000000 00000011<br>b的二进制位是00000000 00000000 00000000 00000101<br>按位或的结果是00000000 00000000 00000000 00000110，有1则1，全1为0。</p>
<hr>
<p>题目：a &#x3D; 3，b &#x3D; 5，交换两个变量的值，不使用第三个变量（即a &#x3D; 5,b &#x3D; 3）</p>
<p>加减法-数值过大可能溢出</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line">    a = a + b;</span><br><span class="line">    b = a - b;</span><br><span class="line">    a = a - b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>异或法（一个数与自身异或等于0，一个数与0异或不变）</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line">    a = a ^ b;</span><br><span class="line">    b = a ^ b;</span><br><span class="line">    a = a ^ b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p>题目：编写代码，求一个整数存储在内存中二进制1的个数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> count =<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;求一个整数存储在内存中二进制1的个数\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个整数：-&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">    <span class="keyword">while</span> (a) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        a = a / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,count);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="赋值操作符"><a href="#赋值操作符" class="headerlink" title="赋值操作符"></a>赋值操作符</h3><p>&#x3D; 就是赋值操作符，当一个变量已经存在，想更改它的值，就用赋值操作符</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line">a = <span class="number">20</span>;</span><br></pre></td></tr></table></figure>
<p><code>a = 20;</code>中的<code>=</code>就是赋值操作符。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">30</span>;</span><br><span class="line">a = b = c + <span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<p><code>a = x = c + 1;</code>是<strong>连续赋值</strong>，这种写法是不推荐的。<br>可以改写成</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">30</span>;</span><br><span class="line">b = c + <span class="number">1</span>;</span><br><span class="line">a = b;</span><br></pre></td></tr></table></figure>
<p>警告⚠️：赋值操作符是一个等号&#x3D;，判断操作符是两个等号==。</p>
<h4 id="复合赋值符"><a href="#复合赋值符" class="headerlink" title="复合赋值符"></a>复合赋值符</h4><ul>
<li>+&#x3D;</li>
<li>-&#x3D;</li>
<li>\*&#x3D;</li>
<li>&#x2F;&#x3D;</li>
<li>%&#x3D;</li>
<li><blockquote>
<blockquote>
<p>&#x3D;</p>
</blockquote>
</blockquote>
</li>
<li>&lt;&lt;&#x3D;</li>
<li>&amp;&#x3D;</li>
<li>|&#x3D;</li>
<li>^&#x3D;</li>
</ul>
<hr>
<h3 id="单目操作符"><a href="#单目操作符" class="headerlink" title="单目操作符"></a>单目操作符</h3><p>只有一个操作数的操作符</p>
<table>
<thead>
<tr>
<th>!</th>
<th>逻辑反操作</th>
</tr>
</thead>
<tbody><tr>
<td>-</td>
<td>负值</td>
</tr>
<tr>
<td>+</td>
<td>正值</td>
</tr>
<tr>
<td>&amp;</td>
<td>取地址</td>
</tr>
<tr>
<td><a href="https://blog.zmyu.cc/posts/d3c4a0cd.html#%E6%93%8D%E4%BD%9C%E7%AC%A6%E4%B9%8Bsizeof">sizeof</a></td>
<td>操作数的类型长度（字节单位）</td>
</tr>
<tr>
<td><a href="https://blog.zmyu.cc/posts/d3c4a0cd.html#%E6%93%8D%E4%BD%9C%E7%AC%A6%E4%B9%8B%E6%8C%89%E4%BD%8D%E5%8F%96%E5%8F%8D%EF%BD%9E">~</a></td>
<td>对一个数的二进制位按位取反</td>
</tr>
<tr>
<td><a href="https://blog.zmyu.cc/posts/d3c4a0cd.html#%E6%93%8D%E4%BD%9C%E7%AC%A6%E4%B9%8B%E5%89%8D%E7%BD%AE%E5%90%8E%E7%BD%AE-%E3%80%81">–</a></td>
<td>前置、后置–</td>
</tr>
<tr>
<td><a href="https://blog.zmyu.cc/posts/d3c4a0cd.html#%E6%93%8D%E4%BD%9C%E7%AC%A6%E4%B9%8B%E5%89%8D%E7%BD%AE%E5%90%8E%E7%BD%AE-%E3%80%81">++</a></td>
<td>前置、后置++</td>
</tr>
<tr>
<td>*</td>
<td>间接访问操作符（解引用操作符）</td>
</tr>
<tr>
<td><a href="https://blog.zmyu.cc/posts/d3c4a0cd.html#%E6%93%8D%E4%BD%9C%E7%AC%A6%E4%B9%8B-%E7%B1%BB%E5%9E%8B-%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2">(类型)</a></td>
<td>强制类型转换</td>
</tr>
</tbody></table>
<hr>
<h3 id="关系操作符"><a href="#关系操作符" class="headerlink" title="关系操作符"></a>关系操作符</h3><table>
<thead>
<tr>
<th>&gt;</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>&gt;&#x3D;</td>
<td></td>
</tr>
<tr>
<td>&lt;</td>
<td></td>
</tr>
<tr>
<td>&lt;&#x3D;</td>
<td></td>
</tr>
<tr>
<td>!&#x3D;</td>
<td>用于测试“不相等”</td>
</tr>
<tr>
<td>&#x3D;&#x3D;</td>
<td>用于测试“相等”</td>
</tr>
</tbody></table>
<hr>
<h3 id="逻辑操作符"><a href="#逻辑操作符" class="headerlink" title="逻辑操作符"></a>逻辑操作符</h3><table>
<thead>
<tr>
<th>&amp;&amp;</th>
<th>按位与</th>
</tr>
</thead>
<tbody><tr>
<td>||</td>
<td>按位或</td>
</tr>
</tbody></table>
<ul>
<li>逻辑按位与&amp;&amp;操作符，如果左侧为假，不管右侧是什么，都不再计算。</li>
<li>逻辑按位或||操作符，如果左侧为真，不管右侧是什么，都不再计算。<br>区分逻辑与和按位与<br>1 &amp; 2  –&gt; 0<br>1 &amp;&amp; 2 –&gt; 1</li>
</ul>
<p>区分逻辑或和按位或<br>1 | 2 –&gt;3<br>1 || 2 –&gt; 1</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>,a = <span class="number">0</span>,b = <span class="number">2</span>,c = <span class="number">3</span>,d = <span class="number">4</span>;</span><br><span class="line">i = a++ &amp;&amp; ++b &amp;&amp; d++;</span><br><span class="line"><span class="comment">//i = a++ || ++b || d++;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a = %d\n b = %d\n c = %d\n d = %d\n&quot;</span>,a,b,c,d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印的结果是1，2，3，4</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>,a = <span class="number">0</span>,b = <span class="number">2</span>,c = <span class="number">3</span>,d = <span class="number">4</span>;</span><br><span class="line"><span class="comment">//i = a++ &amp;&amp; ++b &amp;&amp; d++;</span></span><br><span class="line">i = a++ || ++b || d++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a = %d\n b = %d\n c = %d\n d = %d\n&quot;</span>,a,b,c,d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印的结果是1，2，3，4</p>
<hr>
<h3 id="条件操作符"><a href="#条件操作符" class="headerlink" title="条件操作符"></a>条件操作符</h3><p><a href="https://blog.zmyu.cc/posts/d3c4a0cd.html#%E6%9D%A1%E4%BB%B6%E6%93%8D%E4%BD%9C%E7%AC%A6%EF%BC%88%E4%B8%89%E7%9B%AE%E6%93%8D%E4%BD%9C%E7%AC%A6%EF%BC%89">条件操作符</a></p>
<hr>
<h3 id="逗号表达式"><a href="#逗号表达式" class="headerlink" title="逗号表达式"></a>逗号表达式</h3><p><code>exp1,exp2,exp3,...expn</code><br>逗号表达式，从左往右执行，整个表达式的结果是最后一个表达式的结果。</p>
<hr>
<h3 id="下标引用、函数调用和结构成员"><a href="#下标引用、函数调用和结构成员" class="headerlink" title="下标引用、函数调用和结构成员"></a>下标引用、函数调用和结构成员</h3><p>1、[]下标引用操作符<br>操作数：一个数组名 + 一个索引值</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> arr[<span class="number">10</span>];<span class="comment">//创建数组</span></span><br><span class="line">arr[<span class="number">9</span>] = <span class="number">10</span>;<span class="comment">//实用下标引用操作符</span></span><br></pre></td></tr></table></figure>
<p>[]的两个操作数是arr和9</p>
<p>2、( )函数调用操作符</p>
<p>3、访问一个结构的成员</p>
<ul>
<li>.    结构体.成员名</li>
<li>-&gt;  结构体指-&gt;成员名</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Stu</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//里面是成员变量</span></span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">char</span> id[<span class="number">20</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//使用struct Stu这个类型创建了一个学生变量s1，并初始化</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Stu</span> <span class="title">s1</span> =</span> &#123;<span class="string">&quot;张三&quot;</span>,<span class="number">20</span>,<span class="string">&quot;121312312&quot;</span>&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Stu</span>* <span class="title">ps</span> =</span> &amp;s1;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,(*ps).name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,ps-&gt;name);</span><br><span class="line"><span class="comment">//结构体指针-&gt;成员</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,s1.name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,s1.age);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,s1.id);</span><br><span class="line"><span class="comment">//结构体.成员名（点.操作符）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="表达式求值"><a href="#表达式求值" class="headerlink" title="表达式求值"></a>表达式求值</h3><h4 id="隐式类型转换"><a href="#隐式类型转换" class="headerlink" title="隐式类型转换"></a>隐式类型转换</h4><p>为了获得精度，表达式中的字符和短整型操作数在使用之前被转换为普通整型，这种转换叫整型提升。</p>
<p>如何进行整型提升？<br>——整型提升是按照变量的数据类型的符号位来提升的。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> a = <span class="number">3</span>;</span><br><span class="line">    <span class="comment">//3的2进制序列：00000000 00000000 00000000 00000011</span></span><br><span class="line">    <span class="comment">//a的值：00000011</span></span><br><span class="line">    <span class="type">char</span> b = <span class="number">127</span>;</span><br><span class="line">    <span class="comment">//127的2进制序列：00000000 00000000 00000000 01111111</span></span><br><span class="line">    <span class="comment">//b的值：01111111</span></span><br><span class="line">    <span class="type">char</span> c = a + b;</span><br><span class="line">    <span class="comment">//a和b如何相加：为了获得精度，表达式中的字符和短整型操作数在使用之前被转换为普通整型，这种转换叫整型提升。</span></span><br><span class="line">    <span class="comment">//如何进行整型提升？</span></span><br><span class="line">    <span class="comment">//——整型提升是按照变量的数据类型的符号位来提升的</span></span><br><span class="line">    <span class="comment">//a：00000000 00000000 00000000 00000011</span></span><br><span class="line">    <span class="comment">//b：00000000 00000000 00000000 01111111</span></span><br><span class="line">    <span class="comment">//a + b =00000000 00000000 00000000 10000010</span></span><br><span class="line">    <span class="comment">//截断后 c = 10000010</span></span><br><span class="line">    <span class="comment">//对c整型提升：</span></span><br><span class="line">    <span class="comment">//11111111 11111111 11111111 10000010 - 补码</span></span><br><span class="line">    <span class="comment">//11111111 11111111 11111111 10000001 - 反码</span></span><br><span class="line">    <span class="comment">//10000000 00000000 00000000 01111110 - 原码</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,c);<span class="comment">//打印的结果是-126</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="算数转换"><a href="#算数转换" class="headerlink" title="算数转换"></a>算数转换</h4><p>如果某个操作符的各个操作数属于不同类型，那么除非其中一个操作数的转换为另一个操作数的类型，否则操作无法进行。<br>警告：算数转换要合理，否则会有问题。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">folat f = <span class="number">3.14</span>;</span><br><span class="line"><span class="type">int</span> num = f;<span class="comment">//隐式转换，会有精度丢失。</span></span><br></pre></td></tr></table></figure>

<h4 id="操作符的属性"><a href="#操作符的属性" class="headerlink" title="操作符的属性"></a>操作符的属性</h4><p>复杂表达式求值有三个因素影响：<br>1、操作符的优先级<br>2、操作符的结合性<br>3、是否控制结合顺序</p>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>数组练习</title>
    <url>/posts/8dd99bf5.html</url>
    <content><![CDATA[<p>创建一个整型数组，完成对数组的操作<br>1、实现函数<code>init()</code>初始化数组为全0；<br>2、实现<code>print()</code>打印数组的每个元素；<br>3、实现<code>reverse()</code>函数完成对数组的逆置。</p>
<span id="more"></span>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">init</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> sz)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;sz; i++) &#123;</span><br><span class="line">        arr[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> sz)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;sz; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">reverse</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> sz)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,x,y;</span><br><span class="line">    x = sz<span class="number">-1</span>;</span><br><span class="line">    <span class="type">int</span> temp[sz];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;sz; i++) &#123;</span><br><span class="line">        temp[i] = arr[x];</span><br><span class="line">        x--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (y=<span class="number">0</span>; y&lt;sz; y++) &#123;</span><br><span class="line">        arr[y] = temp[y];</span><br><span class="line">    &#125;</span><br><span class="line">    print(temp,sz);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line"><span class="comment">//    init(arr,sz);</span></span><br><span class="line"><span class="comment">//    print(arr,sz);</span></span><br><span class="line">    reverse(arr,sz);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p>交换数组：将数组A的内容和数组B的内容进行交换（数组一样大）。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> A[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="type">int</span> B[<span class="number">10</span>] = &#123;<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>&#125;;</span><br><span class="line">    <span class="type">int</span> C[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(A)/<span class="keyword">sizeof</span>(A[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;sz; i++) &#123;</span><br><span class="line">        C[i] = A[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;sz; i++) &#123;</span><br><span class="line">        A[i] = B[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;sz; i++) &#123;</span><br><span class="line">        B[i] = C[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;sz; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,A[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;sz; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,B[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>操作符练习</title>
    <url>/posts/da238f3f.html</url>
    <content><![CDATA[<h3 id="统计一个数字的二进制中1的个数"><a href="#统计一个数字的二进制中1的个数" class="headerlink" title="统计一个数字的二进制中1的个数"></a>统计一个数字的二进制中1的个数</h3><p>例如：15的二进制是0000 1111，有4个1<br>方法1:</p>
<span id="more"></span>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;计算一个数字的二进制中1的个数\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个数字:-&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    y = x;</span><br><span class="line">    <span class="keyword">if</span> (x&gt;=<span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(x)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ( x % <span class="number">2</span> == <span class="number">1</span> ) </span><br><span class="line">            &#123;</span><br><span class="line">                a++;</span><br><span class="line">            &#125;</span><br><span class="line">            x = x / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        x = -(x);</span><br><span class="line">        <span class="keyword">while</span>(x)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ( x % <span class="number">2</span> == <span class="number">1</span> ) &#123;</span><br><span class="line">                a++;</span><br><span class="line">            &#125;</span><br><span class="line">            x = x / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a = <span class="number">32</span> - a;</span><br><span class="line">        a = a + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d的二进制中有%d个1\n&quot;</span>,y,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法2:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;计算一个数字的二进制中1的个数\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个数字:-&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    y = x;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">32</span>; i++) </span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">if</span> (((x &gt;&gt; i) &amp; <span class="number">1</span>) == <span class="number">1</span>) <span class="comment">//这一步得到这个数字的二进制中的1位数字是1还是0</span></span><br><span class="line">       &#123;</span><br><span class="line">            a++;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d的二进制中有%d个1\n&quot;</span>,y,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法3:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;计算一个数字的二进制中1的个数\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个数字:-&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    y = x;</span><br><span class="line">    <span class="keyword">while</span> (x) &#123;</span><br><span class="line">        x = x &amp; (x<span class="number">-1</span>);</span><br><span class="line">        a++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d的二进制中有%d个1\n&quot;</span>,y,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>相关：<a href="https://zhuanlan.zhihu.com/p/138518019">负数的二进制计算</a></p>
<hr>
<h3 id="统计两个数字的二进制中不同位数的个数"><a href="#统计两个数字的二进制中不同位数的个数" class="headerlink" title="统计两个数字的二进制中不同位数的个数"></a>统计两个数字的二进制中不同位数的个数</h3><p>方法1:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;计算两个数字的二进制中不同位的个数\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入两个数字:-&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">    <span class="keyword">for</span> (a = <span class="number">0</span>; a&lt;<span class="number">32</span>; a++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (((x&gt;&gt;a) &amp; <span class="number">1</span>) != ((y&gt;&gt;a) &amp; <span class="number">1</span>)) &#123;</span><br><span class="line">            b++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;有%d个不同的位数\n&quot;</span>,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法2:利用按位异或^的特性统计二进制中1的个数。<br>相关：<a href="https://blog.zmyu.cc/posts/e4552cdf#%E6%8C%89%E4%BD%8D%E5%BC%82%E6%88%96">按位异或</a></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> c;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;计算两个数字的二进制中不同位的个数\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入两个数字:-&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">    c = x ^ y;</span><br><span class="line">    <span class="keyword">while</span>(c)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ( c % <span class="number">2</span> == <span class="number">1</span> )</span><br><span class="line">                    &#123;</span><br><span class="line">                        b++;</span><br><span class="line">                    &#125;</span><br><span class="line">                c = c / <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;有%d个不同的位数\n&quot;</span>,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="打印二进制的奇数位和偶数位"><a href="#打印二进制的奇数位和偶数位" class="headerlink" title="打印二进制的奇数位和偶数位"></a>打印二进制的奇数位和偶数位</h3><p>获取一个整数二进制的所有偶数位和奇数位，分别打印出二进制序列。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;打印二进制的奇数位和偶数位\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入数字:-&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;奇数位：&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (a = <span class="number">30</span>; a&gt;=<span class="number">0</span>; a -= <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,(x&gt;&gt;a)&amp;<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;偶数位：&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (a = <span class="number">31</span>; a&gt;=<span class="number">0</span>; a -= <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,(x&gt;&gt;a)&amp;<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="使用指针打印数组内容"><a href="#使用指针打印数组内容" class="headerlink" title="使用指针打印数组内容"></a>使用指针打印数组内容</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]) - <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span>* p = arr;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=sz; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,*p+i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p>相关：<a href="https://blog.zmyu.cc/posts/e4552cdf.html#%E6%8C%89%E4%BD%8D%E5%BC%82%E6%88%96">交换两个变量的值，不使用第三个变量</a></p>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
</search>
