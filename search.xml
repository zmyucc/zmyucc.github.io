<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>GitHub学生开发者包申请攻略</title>
    <url>/posts/f8c9fa9d.html</url>
    <content><![CDATA[<h3 id="1、进入申请页面"><a href="#1、进入申请页面" class="headerlink" title="1、进入申请页面"></a>1、进入申请页面</h3><p>进入<a href="https://education.github.com/pack">GitHub Student Developer Pack</a>，点击绿色的Sign up for Student Developer Pack 注册学生开发者包，随后点击Get student benefits进入填写验证材料的页面。</p>
<div class="admonition note"><p>1、如果浏览器需要位置信息权限，则一定要允许。
2、申请时将VPN关闭。</p>
</div>

<span id="more"></span>

<p><img src="/posts/f8c9fa9d/1.jpg" alt="注册步骤"></p>
<h3 id="2、填写验证信息"><a href="#2、填写验证信息" class="headerlink" title="2、填写验证信息"></a>2、填写验证信息</h3><p><img src="/posts/f8c9fa9d/2.png" alt="信息填写页面"></p>
<p>E-mail处最好填写学校的edu邮箱，如果没有也可使用私人邮箱。想要绑定新的校园邮箱，可点击Add an email address并根据提示进行添加。</p>
<p>What is the name of your school：用英文输入学校的全名，并选择弹出的选项。如果下拉选项中没有你的学校，则使用英文输入学校全名并进行下一步。</p>
<p>How do you plan to use GitHub?：用英文输入申请的目的。（例如：I use GitHub for study）</p>
<p>以上内容填写并检查好后点击Continue进行下一步。</p>
<h3 id="3、上传学生身份证明"><a href="#3、上传学生身份证明" class="headerlink" title="3、上传学生身份证明"></a>3、上传学生身份证明</h3><p>准备好学生卡、学生证以及学信网的验证报告。</p>
<p><img src="/posts/f8c9fa9d/3.png" alt="身份证明"></p>
<p>将照片放入Word中整理好并附上英文说明，如上图所示。英文说明可以参考上图，着重写出这些文件的有效期。</p>
<p>如果你不能通过上传的方式验证，那么需要将本页打印出，并通过摄像头拍摄。</p>
<p>本页填写好确认无误后，点击Process my application提交。</p>
<h3 id="4、通过申请"><a href="#4、通过申请" class="headerlink" title="4、通过申请"></a>4、通过申请</h3><p>提交后，可能会立即收到通过邮件，否则会在几天内收到邮件。</p>
<p><img src="/posts/f8c9fa9d/4.png" alt="通过验证"></p>
<p>如果未通过，则确定好填写的信息和证明文件的清晰度，多提交几次，一般就可以通过了。</p>
]]></content>
      <tags>
        <tag>Github</tag>
        <tag>学生优惠</tag>
        <tag>开发者包</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOs下将Hexo部署到Github Pages</title>
    <url>/posts/d37d0038.html</url>
    <content><![CDATA[<p><a href="hexo.io">Hexo</a>是一个快速、简洁且高效的博客框架。得益于Node.js的快速生成速度，几百个网页可在几秒钟内生成。<br>Hexo支持Markdown的所有功能，只需一条指令即可部署成功。</p>
<span id="more"></span>
<h2 id="一、配置本地环境"><a href="#一、配置本地环境" class="headerlink" title="一、配置本地环境"></a>一、配置本地环境</h2><h3 id="1、安装Homebrew"><a href="#1、安装Homebrew" class="headerlink" title="1、安装Homebrew"></a>1、安装<a href="https://brew.sh/">Homebrew</a></h3><p>将下面的命令复制到MacOs终端以安装<a href="https://brew.sh/">Homebrew</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span><br></pre></td></tr></table></figure>
<h3 id="2、安装git"><a href="#2、安装git" class="headerlink" title="2、安装git"></a>2、安装<a href="https://git-scm.com/">git</a></h3><p>在终端输入下面的命令安装<a href="https://git-scm.com/">git</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure>
<h3 id="3、安装Node-js"><a href="#3、安装Node-js" class="headerlink" title="3、安装Node.js"></a>3、安装<a href="https://nodejs.org/zh-cn/">Node.js</a></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure>
<h3 id="4、安装Hexo"><a href="#4、安装Hexo" class="headerlink" title="4、安装Hexo"></a>4、安装<a href="https://hexo.io/zh-cn/">Hexo</a></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<h3 id="5、安装git部署服务"><a href="#5、安装git部署服务" class="headerlink" title="5、安装git部署服务"></a>5、安装git部署服务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<h3 id="6、使用Hexo创建本地网站"><a href="#6、使用Hexo创建本地网站" class="headerlink" title="6、使用Hexo创建本地网站"></a>6、使用<a href="https://hexo.io/zh-cn/">Hexo</a>创建本地网站</h3><h4 id="（1）新建网站文件夹"><a href="#（1）新建网站文件夹" class="headerlink" title="（1）新建网站文件夹"></a>（1）新建网站文件夹</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir blog</span><br></pre></td></tr></table></figure>
<h4 id="（2）进入网站目录并使用Hexo生成网站"><a href="#（2）进入网站目录并使用Hexo生成网站" class="headerlink" title="（2）进入网站目录并使用Hexo生成网站"></a>（2）进入网站目录并使用Hexo生成网站</h4><p>在终端输入以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd blog</span><br><span class="line">hexo init blog</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>访问 <a href="http://localhost:4000/">http://localhost:4000</a> ，查看到Hexo初始界面，即Hexo本地配置成功。<br>在终端输入control+c退出预览。</p>
<h2 id="二、配置GitHub-Pages"><a href="#二、配置GitHub-Pages" class="headerlink" title="二、配置GitHub Pages"></a>二、配置GitHub Pages</h2><h3 id="1、注册GitHub账户"><a href="#1、注册GitHub账户" class="headerlink" title="1、注册GitHub账户"></a>1、注册GitHub账户</h3><h3 id="2、创建新仓库"><a href="#2、创建新仓库" class="headerlink" title="2、创建新仓库"></a>2、创建新仓库</h3><p>仓库名称为：yourname.github.io(yourname必须为自己的github ID)</p>
<h3 id="3、修改Hexo全局配置文件"><a href="#3、修改Hexo全局配置文件" class="headerlink" title="3、修改Hexo全局配置文件"></a>3、修改Hexo全局配置文件</h3><p>更改网站根目录下_config.yml文件，在文件最后添加以下内容。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>将yourname修改为自己的github ID</p>
<h2 id="三、配置SSH-KEY"><a href="#三、配置SSH-KEY" class="headerlink" title="三、配置SSH KEY"></a>三、配置SSH KEY</h2><h3 id="1、生成SSH-KEY"><a href="#1、生成SSH-KEY" class="headerlink" title="1、生成SSH KEY"></a>1、生成SSH KEY</h3><p>打开终端，输入以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;Your Email Address&quot;</span><br></pre></td></tr></table></figure>
<p>提示输入密码和确认密码，如不想设置可以单击回车。</p>
<h3 id="2、将SSH-KEY-添加到GitHub"><a href="#2、将SSH-KEY-添加到GitHub" class="headerlink" title="2、将SSH KEY 添加到GitHub"></a>2、将SSH KEY 添加到GitHub</h3><p>单击访达➡️前往➡️个人➡️.ssh➡️id_rsa.pub，并复制id_rsa.pub的全部内容<br>找不到.ssh文件夹可以点击shift+command+. ，即可显示隐藏的文件夹。<br>打开GitHub主页，点击头像进入setting，点击SSH and GPG keys，在点击New SSH Key。将内容复制进key，tittle内容可以为空。最后点击Add SSH key<br>在终端输入以下命令以测试是否成功：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@GitHub.com</span><br></pre></td></tr></table></figure>
<p>接下来会提示是否继续连接，在终端输入yes。<br>若出现以下提示，即SSH Key 添加成功。</p>
<h2 id="四、将本地内容上传到github"><a href="#四、将本地内容上传到github" class="headerlink" title="四、将本地内容上传到github"></a>四、将本地内容上传到github</h2><p>终端进入网站目录，并输入以下命令。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Github</tag>
        <tag>Hexo</tag>
        <tag>Github Pages</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac下校验文件的MD5</title>
    <url>/posts/b8295e0f.html</url>
    <content><![CDATA[<p>为了避免文件在传输过程中损坏或被恶意篡改，我们可以校验下载后文件的MD5，与提供的MD5对比。若两者不一致，则该文件损坏或已被修改。</p>
<span id="more"></span>

<p>1、打开终端。</p>
<p>2、在终端内输入以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">md5 [文件路径]</span><br></pre></td></tr></table></figure>

<div class="admonition note"><p>文件路径可通过拖拽文件至终端内获得。</p>
</div>

<p>3、输入回车，等待结果。（若文件较大可能校验时间更久）</p>
<p><img src="/posts/b8295e0f/1.jpg" alt="所校验文件的MD5"></p>
<p>红框内为所校验文件的MD5</p>
]]></content>
      <tags>
        <tag>md5</tag>
        <tag>MacOs</tag>
      </tags>
  </entry>
  <entry>
    <title>getchar和putchar</title>
    <url>/posts/c306e3ff.html</url>
    <content><![CDATA[<p>只输出数字字符，非数字字符不输出</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//只输出数字字符，非数字字符不输出</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != EOF) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(ch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> password[<span class="number">20</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入密码：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,password);<span class="comment">//输入密码，并存放到password数组中</span></span><br><span class="line">    <span class="comment">//缓冲区还剩一个\n</span></span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#123;</span><br><span class="line">        ;<span class="comment">//空语句，不需要做什么</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//直到把缓冲区的\n读取走</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请确认（Y/N）：&quot;</span>);</span><br><span class="line">    ret = getchar();</span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;确认成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;放弃确认&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Netlify免费加速GitHub Pages页面</title>
    <url>/posts/773db5f0.html</url>
    <content><![CDATA[<p>我们在使用Github Pages时会发现其在国内的访问速度非常缓慢，这无疑会影响页面的收录和访客的体验。本文介绍了如何加速Github Pages在国内的速度。</p>
<span id="more"></span>
<p>以下是使用Netlify加速后的访问速度。<br><img src="/posts/773db5f0/1.png" alt="加速后的访问速度"><br>可以看到加速后的页面在国内的访问速度是不错的。</p>
<p>首先，打开<a href="https://www.netlify.com/">Netlify</a>。点击sign up，并使用Github注册。<br><img src="/posts/773db5f0/2.png" alt="注册填写信息"><br>填写好基本的信息，并点击Set up and continue进入下一步。<br><img src="/posts/773db5f0/3.png" alt="点击Import from Git"><br>点击Import from Git从Git库中添加现有项目，进入GitHub授权界面。<br><img src="/posts/773db5f0/4.png" alt="授权界面"><br>在授权界面选择Only select repositories并选中要继续的库，选好后点击install。<br><img src="/posts/773db5f0/5.png" alt="选择库，并选择Branch"><br>接下来选中要使用Netlify的库，并选择Branch。选好后点击Deploy site。<br><img src="/posts/773db5f0/6.png" alt="Netlify管理后台"><br>接下来就进入到了Netlify的后台界面，依次点击Site settings→General→site details→change site name修改网站名称（也可以不修改），例如我的就是zmyu.netlify.app。<br><img src="/posts/773db5f0/7.png" alt="添加自定义域名"><br>进入到以上界面，并点击Add domain alias添加自定义域名，例如我的就是blog.zmyu.cc。<br><img src="/posts/773db5f0/8.png"></p>
<p><img src="/posts/773db5f0/9.png" alt="DNS后台"><br>进入DNS后台，并添加CNAME记录，记录值就是之前修改的域名（或默认的域名），例如我的就是zmyu.netlify.app。<br>设置好之后，等待一段时间后，就可以通过自定义的域名访问网站了。</p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Github Pages</tag>
        <tag>Netlify</tag>
        <tag>SEO</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环之do...while循环</title>
    <url>/posts/44b3ffc2.html</url>
    <content><![CDATA[<p>语法：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    循环语句;</span><br><span class="line">&#125; <span class="keyword">while</span> (表达式);</span><br></pre></td></tr></table></figure>
<p>do语句的特点：循环至少执行一次，使用场景有限。</p>
<span id="more"></span>

<h3 id="使用do…while打印1-10的数字"><a href="#使用do…while打印1-10的数字" class="headerlink" title="使用do…while打印1-10的数字"></a>使用do…while打印1-10的数字</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//打印1-10的数字</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        i++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (i&lt;=<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//当1==5的时候就终止循环了</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);<span class="comment">//打印的结果是1 2 3 4</span></span><br><span class="line">        i++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (i&lt;=<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);<span class="comment">//打印的结果是1 2 3 4后死循环</span></span><br><span class="line">        i++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (i&lt;=<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环之for循环</title>
    <url>/posts/144e24ab.html</url>
    <content><![CDATA[<p>语法：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(表达式<span class="number">1</span>:表达式<span class="number">2</span>:表达式<span class="number">3</span>)</span><br><span class="line">	&#123;</span><br><span class="line">	    循环语句;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>
<p>表达式1是 初始化部分，用于 初始化循环变量。<br>表达式2是 条件判断部分，用于 判断循环时候终止。<br>表达式3是 调整部分，用于 循环条件的调整</p>
<p><img src="/posts/144e24ab/img1.png" alt="for语句图解"></p>
<p>while循环实现i自增到10</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;<span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">while</span> (i&lt;<span class="number">10</span>) &#123;<span class="comment">//判断</span></span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">        i++;<span class="comment">//调整</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="for循环实现i自增到10"><a href="#for循环实现i自增到10" class="headerlink" title="for循环实现i自增到10"></a>for循环实现i自增到10</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//初始化，判断，调整</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=<span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//初始化，判断，调整</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=<span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">5</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);<span class="comment">//打印的结果是1 2 3 4</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印的结果是1 2 3 4，当i==5时，跳出了for循环。</p>
<h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//初始化，判断，调整</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=<span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">5</span>)</span><br><span class="line">            <span class="keyword">continue</span>;<span class="comment">//continue 跳过了打印5，又回到了for循环的判断</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);<span class="comment">//打印的结果是1 2 3 4 6 7 8 9 10</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>continue 跳过了打印5，又回到了for循环的判断。</p>
<h3 id="不可以在for循环内部改变循环变量，防止for循环失去控制"><a href="#不可以在for循环内部改变循环变量，防止for循环失去控制" class="headerlink" title="不可以在for循环内部改变循环变量，防止for循环失去控制"></a>不可以在for循环内部改变循环变量，防止for循环失去控制</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i = <span class="number">5</span>)<span class="comment">//这里不是判断，是赋值。这里修改了for循环内部的循环变量，导致死循环</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;haha\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="建议for语句的循环控制变量的取值采用“前闭后开区间”写法"><a href="#建议for语句的循环控制变量的取值采用“前闭后开区间”写法" class="headerlink" title="建议for语句的循环控制变量的取值采用“前闭后开区间”写法"></a>建议for语句的循环控制变量的取值采用“前闭后开区间”写法</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)<span class="comment">//这里尽量写i&lt;10，而不是i&lt;=9。虽然运行结果一致，但显然前面的写法是有意义的，代表10次打印（循环、元素）</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>for (i=0;i&lt;10;i++)&#123;...&#125;</code>这里尽量写i &lt; 10，而不是i &lt;&#x3D; 9。虽然运行结果一致，但显然前面的写法是有意义的，代表10次打印（循环、元素）。</p>
<h3 id="一些for循环的变种"><a href="#一些for循环的变种" class="headerlink" title="一些for循环的变种"></a>一些for循环的变种</h3><p>变种一</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>for循环的初始化、调整、判断均可省略。<br>for循环的判断部分一旦省略，判断结果一直是真，导致死循环。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;<span class="number">10</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);<span class="comment">//打印的结果是100个hehe</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上例打印的结果是100个hehe。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (; j&lt;<span class="number">10</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);<span class="comment">//打印的结果是10个hehe</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上例打印的结果是10个hehe。</p>
<p>变种二：两个循环变量</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    <span class="keyword">for</span> (x=<span class="number">0</span>,y=<span class="number">0</span>; x&lt;<span class="number">2</span> &amp;&amp; y&lt;<span class="number">5</span>; ++x,y++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);<span class="comment">//用了2个循环变量，打印的结果是两个hehe</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上例打印的结果是两个hehe。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>,k=<span class="number">0</span>; k=<span class="number">0</span>; i++,k++)<span class="comment">//中间的判断部分k=0是判断，0为假，不进入for循环，循环0次</span></span><br><span class="line">        k++;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>由于0代表恒为假，不进入for循环。</p>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环之if语句</title>
    <url>/posts/9ae69c44.html</url>
    <content><![CDATA[<p>C语言是一门 结构化 的程序设计语言<br>C语言分为三种结构</p>
<ul>
<li>1、顺序结构</li>
<li>2、选择结构</li>
<li>3、循环结构<span id="more"></span></li>
</ul>
<p>分支和循环语句：<br>分支语句（选择结构） <code>if</code>、<code>switch</code><br>循环语句 <code>while</code>、<code>for</code>、<code>do while</code></p>
<p>什么是语句？<br>-由分号<code>;</code>隔开的就是一个语句</p>
<h3 id="单分支的if语句"><a href="#单分支的if语句" class="headerlink" title="单分支的if语句"></a>单分支的if语句</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> age = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">if</span> (age &lt; <span class="number">18</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未成年\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="双分支的if语句"><a href="#双分支的if语句" class="headerlink" title="双分支的if语句"></a>双分支的if语句</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> age = <span class="number">12</span>;</span><br><span class="line">    <span class="keyword">if</span> (age &lt; <span class="number">18</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未成年\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;成年\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="多分支if语句"><a href="#多分支if语句" class="headerlink" title="多分支if语句"></a>多分支if语句</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> age = <span class="number">56</span>;</span><br><span class="line">    <span class="keyword">if</span> (age &lt; <span class="number">18</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未成年\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (age &gt;= <span class="number">18</span> &amp;&amp; age &lt; <span class="number">28</span>)<span class="comment">//&amp;&amp; 逻辑与，不可以使用18 &lt;= age &lt; 28表示</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;青年\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (age &gt;= <span class="number">28</span> &amp;&amp; age &lt; <span class="number">50</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;壮年\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (age &gt;= <span class="number">50</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;老年\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>&amp;&amp;</code> 逻辑与，不可以使用18 &lt;&#x3D; age &lt; 28表示。</p>
<p>C语言中如何表示真假？<br>-0表示假，非0就是真</p>
<h3 id="使用代码块的if语句"><a href="#使用代码块的if语句" class="headerlink" title="使用代码块的if语句"></a>使用代码块的if语句</h3><p>如果条件成立，要执行多条语句，要使用代码块{}</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> age = <span class="number">12</span>;</span><br><span class="line">    <span class="keyword">if</span> (age &lt; <span class="number">18</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未成年\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;小于18岁\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (age &gt;= <span class="number">18</span> &amp;&amp; age &lt; <span class="number">28</span>)<span class="comment">//&amp;&amp; 逻辑与，不可以使用18 &lt;= age &lt; 28表示</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;青年\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (age &gt;= <span class="number">28</span> &amp;&amp; age &lt; <span class="number">50</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;壮年\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (age &gt;= <span class="number">50</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;老年\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>一对<code>&#123; &#125;</code>就是一个代码块。</p>
<p>要点：if和else组对是<strong>就近原则</strong>的。</p>
<h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><p>示例一：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">if</span> (condition) &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>条件成立，返回x，否则返回y。</p>
<p>示例二：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (condition)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>条件成立，返回x，否则返回y</p>
<p>示例三：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (num = <span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;呵呵\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印的结果是呵呵，因为<code>num = 5</code>是赋值，<code>num == 5</code>才是判断，想要判断相等时，可以 <code>5 == num</code>，这样可以避免错误。
   </p>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环之if和while示例</title>
    <url>/posts/c99fc782.html</url>
    <content><![CDATA[<h3 id="if判断一个数是否为奇数"><a href="#if判断一个数是否为奇数" class="headerlink" title="if判断一个数是否为奇数"></a>if判断一个数是否为奇数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个数：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">    b = a % <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d是奇数\n&quot;</span>,a);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d是偶数\n34&quot;</span>,a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="while和if输出1到100之间的奇数"><a href="#while和if输出1到100之间的奇数" class="headerlink" title="while和if输出1到100之间的奇数"></a>while和if输出1到100之间的奇数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//输出1-100之间的奇数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (a &lt;= <span class="number">100</span>) </span><br><span class="line">    &#123;</span><br><span class="line">            <span class="keyword">if</span> (a % <span class="number">2</span> == <span class="number">1</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d是奇数\n&quot;</span>,a);</span><br><span class="line">                a = a + <span class="number">1</span>;</span><br><span class="line">            &#125; </span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                a = a + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环之switch语句</title>
    <url>/posts/1c24259b.html</url>
    <content><![CDATA[<p>switch语句是一种分支语句，常用于多分支情况。<br>switch允许嵌套使用。</p>
<span id="more"></span>

<h4 id="输入数字判断星期几"><a href="#输入数字判断星期几" class="headerlink" title="输入数字判断星期几"></a>输入数字判断星期几</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> day = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;day);</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">1</span> == day) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;星期一&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">2</span> == day) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期二&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">3</span> == day) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;星期三&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">4</span> == day) &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;星期四&quot;</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="number">5</span> == day) &#123;</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">&quot;星期五&quot;</span>);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (<span class="number">6</span> == day) &#123;</span><br><span class="line">                                <span class="built_in">printf</span>(<span class="string">&quot;星期六&quot;</span>);</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="number">7</span> == day) &#123;</span><br><span class="line">                                    <span class="built_in">printf</span>(<span class="string">&quot;星期日&quot;</span>);</span><br><span class="line">                                &#125; <span class="keyword">else</span></span><br><span class="line">                                &#123;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用switch语句简化上面的代码</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> day = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;day);</span><br><span class="line">    <span class="keyword">switch</span> (day)<span class="comment">//switch后的括号里的类型必须是整型</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//case后面必须是整型常量表达式</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期一\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//跳出分支，和case搭配使用</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期二\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期三\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期四\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期五\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期六\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;星期日\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>switch</code>后的括号里的类型必须是<strong>整型</strong>。<br><code>case</code>后面必须是<strong>整型常量表达式</strong>。<br><code>break</code>是跳出分支的意思，和<code>case</code>搭配使用。</p>
<h3 id="break把语句列表划分为不同的部分"><a href="#break把语句列表划分为不同的部分" class="headerlink" title="break把语句列表划分为不同的部分"></a>break把语句列表划分为不同的部分</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> day = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;day);</span><br><span class="line">        <span class="keyword">switch</span> (day) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;工作日\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;休息日\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输入1-5输出工作日，6-7输出休息日。<br>良好的代码风格是把最后一个语句后也加上break。</p>
<h3 id="default子句"><a href="#default子句" class="headerlink" title="default子句"></a>default子句</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">switch</span> (day) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;工作日\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;休息日\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="comment">//如果输入的不是1-7，进入default</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;输入错误\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">                <span class="comment">//良好的代码风格是每个switch语句中都加上default子句和break</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>default子句的是输入非法语句时执行的内容。<br>良好的代码风格是每个switch语句中都加上default子句和break。</p>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>分支和循环之while语句</title>
    <url>/posts/8996f118.html</url>
    <content><![CDATA[<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hehe\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>这段代码的意思是一直打印hehe。<br><img src="/posts/8996f118/img1.png" alt="while语句图解"></p>
<h4 id="使用while语句打印1-10"><a href="#使用while语句打印1-10" class="headerlink" title="使用while语句打印1-10"></a>使用while语句打印1-10</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        i = i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="break函数"><a href="#break函数" class="headerlink" title="break函数"></a>break函数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//在屏幕上打印1-10,在i == 5时跳出循环，break</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">5</span>)</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//在循环中遇到break，就停止后期的所有循环，直接终止循环，所以：while中的break是用于永久终止循环的。</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        i = i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在循环中遇到break，就停止后期的所有循环，直接终止循环，所以：while中的break是用于永久终止循环的。<br>在屏幕上打印1-10,在i &#x3D;&#x3D; 5时跳出循环，break。</p>
<h3 id="continue函数"><a href="#continue函数" class="headerlink" title="continue函数"></a>continue函数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//在屏幕上打印1-10,打印到4，i=5时死循环了</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;=<span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">5</span>)</span><br><span class="line">           <span class="keyword">continue</span>;<span class="comment">//continue跳出本次循环。continue是用于终止本次循环的，也就是本次循环中的continue后边的代码不会再执行，而是直接跳转到while语句的判断部分进行下一次循环的入口判断。</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        i = i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>continue跳出本次循环。continue是用于终止本次循环的，也就是本次循环中的continue后边的代码不会再执行，而是直接跳转到while语句的判断部分进行下一次循环的入口判断。</p>
<h3 id="getchar函数和putchar函数"><a href="#getchar函数和putchar函数" class="headerlink" title="getchar函数和putchar函数"></a>getchar函数和putchar函数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//getchar</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ch = getchar();<span class="comment">//输入一个字符</span></span><br><span class="line">    <span class="built_in">putchar</span>(ch);<span class="comment">//打印ch字符</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,ch);<span class="comment">//和putchar效果是一样的。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>初识C语言（二）</title>
    <url>/posts/9eda039f.html</url>
    <content><![CDATA[<h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>字符串，由双引号引起来的一串字符，称为字符串字面值，或者简称字符串。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="string">&quot;abcdef&quot;</span>;</span><br><span class="line">    <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    <span class="string">&quot;&quot;</span>;<span class="comment">//空字符串</span></span><br><span class="line">    <span class="comment">//上面三个都是字符串。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p><code>&quot;&quot;;</code>代表空字符串</p>
<p>字符串的结束标志是一个<code>\0</code>的转义字符。在计算字符串长度的时候<code>\0</code>是结束标志，不算做字符串的内容。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> arr1[] = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">    <span class="type">char</span> arr2[] = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">strlen</span>(arr1));<span class="comment">//strlen-string length-用于计算字符串长度</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">strlen</span>(arr2));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出结果是3和随机值</span></span><br></pre></td></tr></table></figure>
<p><code>strlen</code>就是string length的缩写，用于计算字符串长度。</p>
<p>arr1这个数列包括的内容就是<code>a</code>,<code>b</code>,<code>c</code>,<code>\0</code>，计算长度时，最后一个不计算，所以是字符串长度就是3。<br>arr2这个数列包括<code>a</code>,<code>b</code>,<code>c</code>，最后不是<code>\0</code>结尾。在计算长度时，一直找到<code>\0</code>为止，长度不确定是多少。</p>
<h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><p>转义字符-把原来的意思转变了。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;abc\n&quot;</span>);<span class="comment">//把\n的意思转变了，变成了换行。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>printf(&quot;abc\n&quot;);</code>这里转义字符<code>\n</code>就是把n的意思变成了换行。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c:\test\32\test.c&quot;</span>);</span><br><span class="line">    <span class="comment">//无法正常打印，因为\t是水平制表符，想要显示一个反斜杠，要输入\\，两个反斜杠</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c:\\test\\32\\test.c&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的例子看出，想要显示一个反斜杠，需要输入两个反斜杠就可以正常显示。</p>
<h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><p>C语言实现循环的方式：while、for、do…while等</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(a&lt;<span class="number">20000</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>,a);</span><br><span class="line">        a = a + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a&gt;=<span class="number">20000</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;a&gt;=20000\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>while(a&lt;20000)&#123;……&#125;</code>的意思就是当a小于20000时，一直执行括号里的内容，直到a不再小于20000。</p>
<h3 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h3><p>自定义函数,就是自己设计的函数，可以简化代码，复用代码。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//两数相加</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>&#123;</span><br><span class="line">    <span class="type">int</span> z = x + y;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num1 = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> num2 = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> sum1 = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sum2 = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">200</span>;</span><br><span class="line">    sum1 = Add(num1,num2);</span><br><span class="line">    sum2 = Add(a,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum1 = %d\n&quot;</span>,sum1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum2 = %d\n&quot;</span>,sum2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="选择语句-if"><a href="#选择语句-if" class="headerlink" title="选择语句 if"></a>选择语句 if</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> input = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入1或0:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;input);</span><br><span class="line">    <span class="keyword">if</span> (input == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入的数是1\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入的数是0\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>数据就是一组相同类型元素的集合，数组的下标从0开始，依次递增1。<br><code>int arr[10];</code>   定义一个存放10个整数数字的数组。<br><code>char ch[20];</code>    定义一个存放20个字符的数组。<br><code>float fl[20];</code>   定义一个存放20个浮点数的数组。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;<span class="comment">//定义一个数组，最多放10个元素</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;<span class="number">10</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d,&quot;</span>,arr[i]);</span><br><span class="line">        i = i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的代码的功能是打印出arr这个数组的每个元素的内容。</p>
<h3 id="常属性"><a href="#常属性" class="headerlink" title="常属性"></a>常属性</h3><p>const - 常属性，不能再更改数值</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> num = <span class="number">4</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);</span><br><span class="line">    num = <span class="number">8</span>;<span class="comment">//num不会等于8，因为num是常属性。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> n = <span class="number">10</span>;<span class="comment">//n是变量，但是有常属性，所以我们说n是常变量，本质上是变量，使用常量时，不能用n。</span></span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;<span class="comment">//arr里面不能写n，因为这里要写常量，n是变量。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>const int n = 10;</code> n是变量，但是有常属性，所以我们说n是常变量，本质上是变量，使用常量时，不能用n。</p>
<h3 id="标识符常量"><a href="#标识符常量" class="headerlink" title="标识符常量"></a>标识符常量</h3><p><code>#define</code>定义 标识符常量，例如<code>#define MAX 10</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 10</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">define</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[MAX] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,MAX);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="枚举常量"><a href="#枚举常量" class="headerlink" title="枚举常量"></a>枚举常量</h3><p>枚举，一一列举，比如性别，三原色、星期几等。<br>枚举关键字：<code>enum</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Sex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    MALE,</span><br><span class="line">    FEMALE,</span><br><span class="line">    SECRET</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//上面的三个就是枚举常量</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">Sex</span> <span class="title">s</span> =</span> FEMALE;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,MALE);<span class="comment">//0</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,FEMALE);<span class="comment">//1</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,SECRET);<span class="comment">//2</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>初识C语言（一)</title>
    <url>/posts/d87f7e0c.html</url>
    <content><![CDATA[<h3 id="hello-world-include、printf、return"><a href="#hello-world-include、printf、return" class="headerlink" title="hello world-include、printf、return"></a>hello world-include、printf、return</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello world!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p><code>#include &lt;stdio.h&gt;</code>表示包含一个叫stdio.h的文件。<br>stdio就是standard input output的缩写。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>return 0;</code>与<code>int</code>函数呼应，<code>int main()</code>表示要求返回一个整型，而0就是这个整型。</p>
<p><code>printf(&quot;hello world!\n&quot;);</code>表示在屏幕上打印东西，函数printf，就是print function的缩写，是库函数，即C语言本身提供给我们的函数。后面的<code>\n</code>表示换行。</p>
<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;a&#x27;</span>;<span class="comment">//存到内存里</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,ch);<span class="comment">//%c-打印字符型数据</span></span><br><span class="line">    <span class="comment">//int 整型</span></span><br><span class="line">    <span class="type">int</span> age = <span class="number">20</span>;<span class="comment">//定义一个整型数据age</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,age);<span class="comment">//%d-打印整型十进制数据</span></span><br><span class="line">    <span class="comment">//long 长整型</span></span><br><span class="line">    <span class="type">long</span> num = <span class="number">100000000000</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%ld\n&quot;</span>,num);</span><br><span class="line">    <span class="type">float</span> f = <span class="number">5.0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>,f);</span><br><span class="line">    <span class="comment">//返回不同类型的字符占用内存大小。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">char</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">short</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">long</span>)); <span class="comment">//返回的字节可能是4或8</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">long</span> <span class="type">long</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">float</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">double</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>char</code>  表示字符数据类型  打印用<code>%c</code></p>
<p><code>short</code> 短整型(short int) ,2字节<br><code>int</code> 整型，4字节<br><code>long</code> 长整型，根据不同规定，8字节或4字节<br><code>long long</code> 更长的整型，8字节<br>打印上面四个用<code>%d</code></p>
<p><code>float</code> 单精度浮点数，4字节<br><code>double</code> 双精度浮点数，8字节<br>打印用<code>%f</code></p>
<p><code>%d</code>打印整型<br><code>%c</code>打印字符<br><code>%f</code>打印浮点数-打小数<br><code>%p</code>以地址的形式打印<br><code>%x</code>打印16进制数字</p>
<p><code>char ch = &#39;a&#39;;</code>表示定义一个字符型数据ch，就是a<br><code>printf(&quot;%c\n&quot;,ch);</code>%c表示打印字符型数据ch</p>
<p><code>printf(&quot;%d\n&quot;,age);</code>%d表示打印整型十进制数据age</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">age</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//年龄</span></span><br><span class="line">    <span class="comment">//20</span></span><br><span class="line">   <span class="type">short</span> age = <span class="number">20</span>; <span class="comment">//向内存申请2个字节，16bit位，用来存放20</span></span><br><span class="line">   <span class="type">float</span> weight = <span class="number">95.6</span>;<span class="comment">//向内存申请4个字节，32bit位，用来存放小数，小数必须用浮点数</span></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>小数必须用浮点数。</p>
<h3 id="两个数相加-scanf"><a href="#两个数相加-scanf" class="headerlink" title="两个数相加-scanf"></a>两个数相加-scanf</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//计算连个数的和</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//c语言语法规定，变量要定义在当前代码块的最前面</span></span><br><span class="line">    <span class="comment">//输入数据用scanf</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);<span class="comment">//&amp;符号是取地址的意思</span></span><br><span class="line">    sum = a + b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>c语言语法规定，变量要定义在当前代码块的最前面。<br><code>scanf(&quot;%d%d&quot;,&amp;a,&amp;b);</code><br>输入数据用<code>scanf</code>，<code>&amp;</code>符号是取地址的意思。<br>这句话表述输入两个整型变量a和b。</p>
<h3 id="变量、常量、全局变量、局部变量"><a href="#变量、常量、全局变量、局部变量" class="headerlink" title="变量、常量、全局变量、局部变量"></a>变量、常量、全局变量、局部变量</h3><p>不变的量就是常量，变的量就是变量。<br>变量分为局部变量和全局变量，局部变量和全局变量名字建议不要相同，相同局部优先。局部变量只能在大括号内部使用。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> num1 = <span class="number">10</span>;<span class="comment">//num1是全局变量-定义在代码块括号外</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//定义变量的方式</span></span><br><span class="line">    <span class="type">int</span> age = <span class="number">150</span>;</span><br><span class="line">    <span class="type">float</span> weight = <span class="number">99.9</span>;</span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;w&#x27;</span>;</span><br><span class="line"><span class="comment">//变量分为局部变量和全局变量</span></span><br><span class="line">    <span class="type">int</span> num2 = <span class="number">20</span>;<span class="comment">//num2是局部变量-定义在代码块括号内</span></span><br><span class="line">    <span class="type">int</span> num1 = <span class="number">30</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num1);<span class="comment">//局部变量和全局变量名字建议不要相同，相同局部优先。所以打印出30。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>局部变量和全局变量名字建议不要相同，相同局部优先。所以打印出30。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);<span class="comment">//不会打印出10，因为局部变量只能在大括号内部使用</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>初识C语言（四）</title>
    <url>/posts/64e9b9a8.html</url>
    <content><![CDATA[<h3 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;<span class="comment">//向内存申请了4个字节的空间</span></span><br><span class="line">    <span class="type">int</span>* p = &amp;a;<span class="comment">//p是一个变量-是指针变量（用来存地址的）-类型是int型</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,&amp;a);<span class="comment">//%p是用来打印地址的，&amp;a是用来取a的地址的。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,p);<span class="comment">//打印的内容和上面是一样的</span></span><br><span class="line">    *p = <span class="number">20</span>;<span class="comment">//* - 解引用操作符（间接访问操作符）</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d\n&quot;</span>,a);<span class="comment">//改变了a的值，a = 20</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> d = <span class="number">3.14</span>;</span><br><span class="line">    <span class="type">double</span>* pd = &amp;d;</span><br><span class="line">    *pd = <span class="number">5.5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>,d);<span class="comment">//结果是5.500000</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>,*pd);<span class="comment">//结果和直接打印d是一样的</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(pd));<span class="comment">//打印的结果是4或8，主要取决于平台是32位或64位</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>指针变量的大小</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">char</span>*));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">short</span>*));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">int</span>*));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">double</span>*));<span class="comment">//打印的结果都是4或8，主要取决于平台是32位或64位</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>指针变量的大小是4或8字节，主要取决于32位平台（4字节）或64位平台（8字节）</p>
<h3 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h3><p>想描述一个复杂对象，需要使用结构体，结构体就是自己创造出来的一种类型。<br>例如想创造一本书，需要书名、作者、出版社、定价等信息。<br>struct关键字-struct Book。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//创建一个结构体类型Book</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Book</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];<span class="comment">//C语言程序设计</span></span><br><span class="line">    <span class="type">short</span> price;<span class="comment">//价格是55</span></span><br><span class="line">&#125;;<span class="comment">//此分号用于结束类型定义</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//利用结构体类型-创建一个该类型的变量b1</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Book</span> <span class="title">b1</span> =</span> &#123;<span class="string">&quot;C语言程序设计&quot;</span>,<span class="number">55</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;书名：%s\n&quot;</span>,b1.name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;价格：%d元\n&quot;</span>,b1.price);<span class="comment">//打印信息</span></span><br><span class="line">    b1.price = <span class="number">15</span>;</span><br><span class="line">    <span class="built_in">strcpy</span>(b1.name,<span class="string">&quot;C++&quot;</span>); <span class="comment">//strcpy-string copy - 字符串拷贝 - 库函数string.h</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;修改后书名：%s\n&quot;</span>,b1.name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;修改后的价格：%d元\n&quot;</span>,b1.price);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结构体中想要修改数组内容，需要用到字符串拷贝函数 - strcpy。<br><code>strcpy(b1.name,&quot;C++&quot;);</code>的意思是把结构体<code>b1</code>中的<code>name</code>改成<code>C++</code>。<br>要使用strcpy，需要string.h库函数。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Book</span> <span class="title">b1</span> =</span> &#123;<span class="string">&quot;C语言程序设计&quot;</span>,<span class="number">55</span>&#125;;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Book</span>* <span class="title">pb</span> =</span> &amp;b1;</span><br><span class="line">    <span class="comment">//利用pb打印出书名和价格</span></span><br><span class="line"><span class="comment">//    printf(&quot;%s\n&quot;,(*_pb).name);</span></span><br><span class="line"><span class="comment">//    printf(&quot;%d\n&quot;,(_*pb).price);</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,pb-&gt;name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,pb-&gt;price);<span class="comment">//使用箭头-&gt;和上面的点.操作符是一样的</span></span><br><span class="line">    <span class="comment">//.  结构体变量.成员</span></span><br><span class="line">    <span class="comment">//-&gt; 结构体指针-&gt;成员</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>初识C语言（三）</title>
    <url>/posts/d3c4a0cd.html</url>
    <content><![CDATA[<h3 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h3><h4 id="操作符之sizeof"><a href="#操作符之sizeof" class="headerlink" title="操作符之sizeof"></a>操作符之sizeof</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(a));<span class="comment">//整型变量占内存4个字节</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span> a);<span class="comment">//和上面的结果是一样的。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">int</span>));<span class="comment">//整型变量占内存4个字节</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(arr));<span class="comment">//计算数组的大小，单位是字节，4*6=24</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]));<span class="comment">//想要知道数组元素个数，可以把数组占用字节大小/数组每个元素占的字节</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p><code>sizeof(arr)/sizeof(arr[0])</code>想要知道数组元素个数，可以把数组占用字节大小&#x2F;数组每个元素占的字节。</p>
<h4 id="操作符之前置后置-、"><a href="#操作符之前置后置-、" class="headerlink" title="操作符之前置后置++、--"></a>操作符之前置后置++、--</h4><h5 id="后置"><a href="#后置" class="headerlink" title="后置++"></a>后置++</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = a++;<span class="comment">//后置++，先使用a的值，然后a再自增</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d , b = %d&quot;</span>,a,b);<span class="comment">//a = 11 , b = 10</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>后置++，先使用a的值，然后a再自增。</p>
<h5 id="前置"><a href="#前置" class="headerlink" title="前置++"></a>前置++</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = ++a;<span class="comment">//前置++，先++，再使用，即a先自增，变成11，再把a的值赋给b</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d , b = %d&quot;</span>,a,b);<span class="comment">//a = 11 , b = 11</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>前置++，先++，再使用，即a先自增，变成11，再把a的值赋给b。</p>
<h5 id="后置-1"><a href="#后置-1" class="headerlink" title="后置--"></a>后置--</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = a--;<span class="comment">//后置--，先使用a的值，然后a再自减</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d , b = %d&quot;</span>,a,b);<span class="comment">//a = 9 , b = 10</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>后置--，先使用a的值，然后a再自减</p>
<h5 id="前置-1"><a href="#前置-1" class="headerlink" title="前置--"></a>前置--</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = --a;<span class="comment">//前置--，a先--，再使用</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d , b = %d&quot;</span>,a,b);<span class="comment">//a = 9 , b = 9</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>前置--，a先--，再使用</p>
<h4 id="操作符之按位取反～"><a href="#操作符之按位取反～" class="headerlink" title="操作符之按位取反～"></a>操作符之按位取反～</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//4个字节，32个比特位</span></span><br><span class="line">    <span class="comment">//0的二进制序列:00000000 00000000 00000000 00000000</span></span><br><span class="line">    <span class="type">int</span> b = ~a;<span class="comment">//b是有符号的整型，最高位表示的是符号位</span></span><br><span class="line">    <span class="comment">//取反后的二进制序列:1（符号位，1代表负数）1111111 11111111 11111111 11111111</span></span><br><span class="line">    <span class="comment">//~是按位取反的意思，位是二进制位。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,b);<span class="comment">//使用时，打印的是二进制的原码</span></span><br><span class="line">    <span class="comment">//打印的结果是-1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>原码、反码、补码：负数在内存中存储的时候，存储的是二进制的补码</p>
<h4 id="操作符之-类型-强制类型转换"><a href="#操作符之-类型-强制类型转换" class="headerlink" title="操作符之(类型)强制类型转换"></a>操作符之(类型)强制类型转换</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = (<span class="type">int</span>)<span class="number">3.14</span>;<span class="comment">//原先3.14是double类型，想转换成int型</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>原先3.14是double类型，想转换成int型，打印的结果是3。<br>不建议在代码中使用</p>
<h4 id="算数操作符"><a href="#算数操作符" class="headerlink" title="算数操作符"></a>算数操作符</h4><p>算数操作符包括+、-、*、&#x2F;、%(求余数)</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">5</span>/<span class="number">2</span>;<span class="comment">//结果是2。</span></span><br><span class="line">    <span class="type">int</span> b = <span class="number">5</span>%<span class="number">2</span>;<span class="comment">//结果是1。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="移位操作符"><a href="#移位操作符" class="headerlink" title="移位操作符"></a>移位操作符</h4><p>移位操作符（移的是2进制位）  &gt;&gt;右移操作符、&lt;&lt;左移操作符</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//整型a占4个字节，32位，十进制是1，用2进制表示也就是 00000000 00000000 00000000 00000001</span></span><br><span class="line">    <span class="type">int</span> b = a&lt;&lt;<span class="number">1</span>;</span><br><span class="line">    <span class="comment">//整型b是整型a左移1个字节的结果，也就是00000000 00000000 00000000 00000010，用十进制表示就是2</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);<span class="comment">//对a进行左移操作，a本身不变化。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="位操作符"><a href="#位操作符" class="headerlink" title="位操作符"></a>位操作符</h4><p>位操作符，操作的是2进制位。 &amp;（按位与） ^（按位异或） |（按位或）</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">3</span>;<span class="comment">//a的二进制 0011</span></span><br><span class="line">    <span class="type">int</span> b = <span class="number">5</span>;<span class="comment">//b的二进制 0101</span></span><br><span class="line">    <span class="type">int</span> c = a&amp;b;</span><br><span class="line">    <span class="comment">//a和b按位与就是 0001，按位与也就是并且的意思，只有两个都是1，结果才是1，其余都是0。</span></span><br><span class="line">    <span class="type">int</span> d = a|b;</span><br><span class="line">    <span class="comment">//a和b按位或就是 0111,按位或就是有一个1结果就是1。</span></span><br><span class="line">    <span class="type">int</span> e = a^b;</span><br><span class="line">    <span class="comment">//a和b按位异或就是0110,按位异或就是：有1则1，全1则0。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,e);    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="赋值和判断"><a href="#赋值和判断" class="headerlink" title="赋值和判断"></a>赋值和判断</h4><p>赋值和判断：一个等号是赋值，两个等号是判断相等。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    a = <span class="number">20</span>;<span class="comment">//赋值，两个==是判断相等</span></span><br><span class="line">    a = a + <span class="number">10</span>;<span class="comment">//也是赋值</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="单目操作符、双目操作符、三目操作符"><a href="#单目操作符、双目操作符、三目操作符" class="headerlink" title="单目操作符、双目操作符、三目操作符"></a>单目操作符、双目操作符、三目操作符</h4><p>&gt;<br>&gt;&#x3D;<br>&lt;<br>&lt;&#x3D;<br> !&#x3D; 用于测试不相等<br> &#x3D;&#x3D; 用于测试 相等</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> c = a + b;<span class="comment">//加号就是操作符，是双目操作符，就是左右有两个操作数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="逻辑与操作符-amp-amp"><a href="#逻辑与操作符-amp-amp" class="headerlink" title="逻辑与操作符&amp;&amp;"></a>逻辑与操作符&amp;&amp;</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> c = a &amp;&amp; b;<span class="comment">//a和b都不是0，所以都是真</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,c);<span class="comment">//a和b逻辑与的结果是1，因为逻辑与-全真则真，有假全假</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>a和b逻辑与的结果是1，因为逻辑与-全真则真，有假全假</p>
<h4 id="逻辑或操作符"><a href="#逻辑或操作符" class="headerlink" title="逻辑或操作符||"></a>逻辑或操作符||</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> c = a || b;<span class="comment">//a是假，b是真</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,c);<span class="comment">//逻辑或操作符，有一个是真，结果就是真</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>逻辑或操作符，有一个是真，结果就是真</p>
<h4 id="条件操作符（三目操作符）"><a href="#条件操作符（三目操作符）" class="headerlink" title="条件操作符（三目操作符）"></a>条件操作符（三目操作符）</h4><p><code>exp1 ? exp2 : exp3;</code><br>exp代表表达式，上式的意思是，如果exp1的结果为真，exp2位最终结果，如果exp1的结果为假，exp3为最终结果</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> max;</span><br><span class="line"><span class="comment">//    if (a&gt;b)</span></span><br><span class="line"><span class="comment">//        max = a;</span></span><br><span class="line"><span class="comment">//    else</span></span><br><span class="line"><span class="comment">//        max = b;</span></span><br><span class="line">    max = ( a &gt; b ? a : b );<span class="comment">//这个表达式和上面的if是一样的</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,max);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="常用关键字"><a href="#常用关键字" class="headerlink" title="常用关键字"></a>常用关键字</h3><h4 id="break"><a href="#break" class="headerlink" title="break"></a>break</h4><p>break-用于停止循环</p>
<h4 id="typedef-类型定义-类型重新定义"><a href="#typedef-类型定义-类型重新定义" class="headerlink" title="typedef-类型定义-类型重新定义"></a>typedef-类型定义-类型重新定义</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> num1 = <span class="number">20</span>;<span class="comment">//定义一个无符号呢整型num1</span></span><br><span class="line">    <span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">int</span> u_int;<span class="comment">//把unsigned int重定义成了u_int，就是别名</span></span><br><span class="line">    u_int num2 = <span class="number">20</span>;<span class="comment">//num1和num2两个变量的类型是一样的</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>typedef unsigned int u_int;</code>把<code>unsigned int</code>重定义成了<code>u_int</code></p>
<h4 id="auto"><a href="#auto" class="headerlink" title="auto"></a>auto</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;<span class="comment">//局部变量-自动变量-在前面省略掉了auto</span></span><br><span class="line">    <span class="comment">//例如 auto int a = 10;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="static-函数"><a href="#static-函数" class="headerlink" title="static 函数"></a>static 函数</h4><p>static修饰函数,改变了函数的链接属性，普通函数有外部链接属性，被修饰后就没有了。</p>
<p>static修饰全局变量，改变了变量的作用域-让静态的全局变量只能在自己所在的文件内部使用，出了源文件就无法使用了。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    a++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;<span class="number">5</span>) &#123;</span><br><span class="line">        test();</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>a是静态的局部变量，被static修饰，局部变量的生命周期延长了。<br>输出的结果是：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">a = <span class="number">2</span></span><br><span class="line">a = <span class="number">3</span></span><br><span class="line">a = <span class="number">4</span></span><br><span class="line">a = <span class="number">5</span></span><br><span class="line">a = <span class="number">6</span></span><br></pre></td></tr></table></figure>
<p>相当于<code>static int a = 1;</code>只运行了一次？</p>
<h4 id="extern-用于声明外部符号"><a href="#extern-用于声明外部符号" class="headerlink" title="extern - 用于声明外部符号"></a>extern - 用于声明外部符号</h4><p>main.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="type">int</span> g_val;<span class="comment">//声明外部符号</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;g_val = %d\n&quot;</span>,g_val);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>extern.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> g_val = <span class="number">100</span>;<span class="comment">//全局变量</span></span><br></pre></td></tr></table></figure>
<p>打印的结果是 <code>g_val = 100</code></p>
<p>extern声明外部函数<br>main.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span>,<span class="type">int</span>)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> sum = Add(a,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Add.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> z = x + y;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印的结果是<code>sum = 30</code></p>
<h3 id="define定义常量和宏"><a href="#define定义常量和宏" class="headerlink" title="define定义常量和宏"></a>define定义常量和宏</h3><p>define定义标识符常量</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 1000</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//  int a = 100;</span></span><br><span class="line">    <span class="type">int</span> a = MAX;<span class="comment">//和上面的效果一样</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>define定义宏</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//宏的定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX(X,Y) (X&gt;Y?X:Y)</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> max = MAX(a,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;max = %d\n&quot;</span>,max);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h3><p>指针变量的大小：在32位平台占4个字节，在64位平台占8个字节。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span>* p = &amp;a;<span class="comment">//取出a的地址</span></span><br><span class="line">    <span class="comment">//有一种变量是用来存放地址的，就是指针变量，类型是int*</span></span><br><span class="line">    *p = <span class="number">20</span>;<span class="comment">//*-解引用操作符，通过*p把a里面的值改成20</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,&amp;a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,p);<span class="comment">//和a的地址一样</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d\n&quot;</span>,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>有一种变量是用来存放地址的，就是指针变量。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;w&#x27;</span>;</span><br><span class="line">    <span class="type">char</span>* pc = &amp;ch;</span><br><span class="line">    *pc = <span class="string">&#x27;a&#x27;</span>;<span class="comment">//通过*pc把ch里面的值改成a</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,ch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>原码、反码、补码</title>
    <url>/posts/fb35e44.html</url>
    <content><![CDATA[<p>只要是整数，在内存中存储的都是二进制的补码。<br>正数——原码、反码、补码都相同。</p>
<span id="more"></span>

<p>对于负数：<br>例如-2，的计算过程。</p>
<table>
<thead>
<tr>
<th>原码</th>
<th>–&gt;反码</th>
<th>–&gt;补码</th>
</tr>
</thead>
<tbody><tr>
<td>直接按照正负，写出二进制序列</td>
<td>原码符号位不变，其他位按位取反</td>
<td>反码+1</td>
</tr>
<tr>
<td>10000000 00000000 00000000 00000010</td>
<td>11111111 11111111 11111111 11111101</td>
<td>11111111 11111111 11111111 11111110</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
</search>
